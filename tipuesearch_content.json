{"pages":[{"text":"","tags":"misc","loc":"http://zhangliyong.github.io/posts/2014/02/19/mongodb-replication-set.html","title":"MongoDB Replication Set"},{"text":"B-tree MongoDB Index B-tree IndexStats Reference As we all know MongoDB use B-tree to create indexes, here I'll show the deep view of MongoDB indexes. B-tree First, an overview of B-tree. From wikipedia: In computer science, a B-tree is a tree data structure that keeps data sorted and allows searches, sequential access, insertions, and deletions in logarithmic time. The B-tree is a generalization of a binary search tree in that a node can have more than two children (Comer 1979, p. 123). Unlike self-balancing binary search trees, the B-tree is optimized for systems that read and write large blocks of data. It is commonly used in databases and filesystems. A B-tree of order 2 or order 5: Internal nodes can have vary number of keys, vary between $d$ and $2d$, the factor of $2$ can guarantee that nodes can be split and combined, and still conform to the upper and lower limit. All leaf nodes have the same depth. Definition from wikipedia: According to Knuth's definition, a B-tree of order m is a tree which satisfies the following properties: Every node has at most m children. Every non-leaf node (except root) has at least \u2308m\u20442\u2309 children. The root has at least two children if it is not a leaf node. A non-leaf node with k children contains k\u22121 keys. All leaves appear in the same level, and internal vertices carry no information. MongoDB Index B-tree In this section, I will show you mongo index btree. From btree.h : The nodes of our btree are referred to as buckets below. These buckets are of size BucketSize and their body is an ordered array of pairs, where disk loc is the disk location of a document and bson key is a projection of this document into the schema of the index for this btree. Ordering is determined on the basis of bson key first and then disk loc in case of a tie. All bson keys for a btree have identical schemas with empty string field names and may not have an objsize() exceeding KeyMax. The btree's buckets are themselves organized into an ordered tree. This is what btree looks like: When the btree is serialized on the disk, every bucket is stored as a record, like a document in a collection. Each bucket has a fixed size 8192, but with 16 byte to store record header. See mongo storage . Bucket store keynode and keydata, this is what bucket looks like: prevChildBucket is a pointer, point to the left child bucket of this key. kdo points to the key data of this key. recordLoc points to the location of the key's doucment. keynode is a struct, and has a fixed size. template < class Loc > struct __KeyNode { /** * The 'left' child bucket of this key. If this is the i-th key, it * points to the i index child bucket. */ Loc prevChildBucket ; /** The location of the record associated with this key. */ Loc recordLoc ; /** Offset within current bucket of the variable width bson key for this _KeyNode. */ unsigned short _kdo ; } The size of keydata varies, with upper limit 1024 bytes. When insert a new key to a bucket, keynode is inserted from left, and keydata is insert from right. Bucket format: | hhhh | kkkkkkk \u2014\u2014\u2014\u2014 bbbbbbbbbbbuuubbbuubbb | h = header data k = KeyNode data - = empty space b = bson key data u = unused ( old ) bson key data , that may be garbage collected So how many keys can be stored in a bucket depends on keydata size. MongoDB allows to store 1024 keys at most. When the bucket is full, or has 1024 keys, it will be splited. keydata is a projection of a document into the schema of the index. For an index, the schema is fixed, so keydata does not need to contain fieldNames. If a document does not have a field, then the fileValue will be null in keydata. Sparse: When create a sparse index, only when the document does not have all the fields of the index, it will be ignore, if one of the fields exists, it will be indexed. Example: index: { name : 1 , age : 1 } documents: d1: { name : ' Tom ' , age : 23 } keydata : Tom , 23 d2: { name : null , age : 40 } keydata : null , 40 d3: { name : ' Jerry ' , address : CA } keydata : Jerry , null d4: { weight : 70 , address : CA } keydata : null , null If create the index with sparse as true, the document d4 will not be indexed. IndexStats MongoDB 2.4 ships with a indexStats command, the command can be run only on a mongod instance that uses the --enableExperimentalIndexStatsCmd option. To aggregate statistics, issue the command like so: db.runCommand ( { indexStats : \"<collection>\" , index : \"<index name>\" } ) Reference http://en.wikipedia.org/wiki/B-tree https://github.com/mongodb/mongo/blob/master/src/mongo/db/structure/btree/btree.h https://github.com/mongodb/mongo/blob/master/src/mongo/db/structure/btree/btree.cpp if (!document.getElementById('mathjaxscript_pelican')) { var s = document.createElement('script'); s.id = 'mathjaxscript_pelican'; s.type = 'text/javascript'; s.src = 'https:' == document.location.protocol ? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js' : 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; s[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(s); }","tags":"misc","loc":"http://zhangliyong.github.io/posts/2014/02/19/mongodb-index-internals.html","title":"MongoDB Index Internals"},{"text":"\u672c\u6587\u6211\u4eec\u8ba8\u8bba\u4e00\u4e0b\u4e00\u4e9b\u7279\u6b8a\u67e5\u8be2\u5bf9\u7d22\u5f15\u7684\u4f7f\u7528\u60c5\u51b5\u3002 Test data: rs0 : PRIMARY > db . foo . find () { \"_id\" : ObjectId ( \"52fda635720bcc4ea4bb961c\" ), \"name\" : \"test_name\" } { \"_id\" : ObjectId ( \"5304412b720bcc4ea4bb9627\" ), \"b\" : 1 } { \"_id\" : ObjectId ( \"5304430b720bcc4ea4bb9628\" ), \"name\" : null } rs0 : PRIMARY > db . foo . ensureIndex ({ 'name' : 1 }) rs0 : PRIMARY > db . foo . ensureIndex ({ 'b' : 1 }) $exists, null // not use index {name: 1} rs0: PRIMARY > db . foo . find ({' name ' : { $ exists: true }}) { \"_id\" : ObjectId ( \"52fda635720bcc4ea4bb961c\" ), \"name\" : \"test_name\" } { \"_id\" : ObjectId ( \"5304430b720bcc4ea4bb9628\" ), \"name\" : null } {$exists: true} will not use index {name: 1} . // use index {name: 1} rs0: PRIMARY > db . foo . find ({' name ' : { $ exists: false }}, {' name ' : 1 }) { \"_id\" : ObjectId ( \"5304412b720bcc4ea4bb9627\" ), \"b\" : 1 } {$exists: false} can use the index {name: 1} . // use index {name: 1} rs0: PRIMARY > db . foo . find ({' name ' : null }, {' name ' : 1 }) { \"_id\" : ObjectId ( \"5304412b720bcc4ea4bb9627\" ), \"b\" : 1 } { \"_id\" : ObjectId ( \"5304430b720bcc4ea4bb9628\" ), \"name\" : null } The doucment without name filed also show up. So when create an index on a field without sparse option, if an document without the filed, it will also be indexed in the index with the filed value as null . Use explain() on the two query, the indexBounds of the output are the same. They both use index {name: 1} , and have the same time complexity, only the outputs are different. \"nscannedObjects\" : 2 , \"nscanned\" : 2 , \"indexBounds\" : { \"name\" : [ [ null , null ] ] } , $ne // use index {b: 1} rs0: PRIMARY > db . foo . find ({ 'b' : { $ ne: 1 }}) { \"_id\" : ObjectId ( \"52fda635720bcc4ea4bb961c\" ), \"name\" : \"test_name\" } { \"_id\" : ObjectId ( \"5304430b720bcc4ea4bb9628\" ), \"name\" : null } explain(): \"indexBounds\" : { \"b\" : [ [ { \"$minElement\" : 1 }, 1 ] , [ 1 , { \"$maxElement\" : 1 } ] ] } NOTE: _id is output by default for any query, so if you want an query to be indexOnly, you need to specify _id: 0 on return fields. if (!document.getElementById('mathjaxscript_pelican')) { var s = document.createElement('script'); s.id = 'mathjaxscript_pelican'; s.type = 'text/javascript'; s.src = 'https:' == document.location.protocol ? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js' : 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; s[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(s); }","tags":"misc","loc":"http://zhangliyong.github.io/posts/2014/02/19/mongodb-index.html","title":"MongoDB Index"},{"text":"\u542f\u7528journal\u540e\uff0cMongoDB\u7684\u64cd\u4f5c\u5148\u5199\u5230journal buffer\u4e2d\uff0c\u6bcf100ms MongoDB\u4f1aflush journal buffer\u5230\u78c1\u76d8journal\u4e2d\uff0c\u6b64\u65f6\u6570\u636e\u4e0d\u4f1a\u4e22\u5931\uff0c \u82e5MongoDB crash\uff0c\u5219\u6700\u591a\u4f1a\u4e22\u5931100ms\u7684\u6570\u636e\u3002 Journal Files mongod\u542f\u52a8\u540e\uff0c\u4f1a\u5728 dbpath \u4e0b\u65b0\u5efa\u4e00\u4e2a journal \u76ee\u5f55\uff0c\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u5b58\u653e\u6240\u6709\u7684journal\u6587\u4ef6\uff0cjournal \u6587\u4ef6\u662fappend-only\uff0c\u800c\u4e14\u6587\u4ef6\u540d\u4ee5 j._ \u4e3a\u524d\u7f00\uff0c\u6bcf\u4e2ajournal\u6587\u4ef6\u7684\u5927\u5c0f\u4e3a1GB\uff0c\u5f53journal\u8d85\u8fc71GB\u540e\uff0c\u4f1a\u521b\u5efa\u65b0\u7684journal\u6587\u4ef6\uff0c\u5f53MongoDB\u5c06journal\u4e2d\u7684\u6240\u5199\u64cd\u4f5c\u5e94\u7528\u5230\u6570\u636e\u6587\u4ef6\u540e\uff0c\u8fd9\u4e9bjournal\u6587\u4ef6\u624d\u4f1a\u88ab\u5220\u9664\u3002 journal\u6587\u4ef6\u7684\u683c\u5f0f\u4e3a\uff1a How Journal Works NOTE: \u6b64\u90e8\u5206\u7ffb\u8bd1\u81ea\uff1a http://www.kchodorow.com/blog/2012/10/04/how-mongodbs-journaling-works/ \u9996\u5148\u78c1\u76d8\u4e0a\u5b58\u50a8\u4e86 journal files\u548cdata files\uff0c\u5982\u4e0b\uff1a \u5f53\u542f\u52a8mongod\u540e\uff0c\u4f1a\u5c06data files\u6620\u5c04\u5230shared view\uff0c\u5e76\u8fd4\u56de\u5176\u5728\u5185\u5b58\u7684\u865a\u62df\u5730\u5740\u3002\u4f8b\u5982\uff1a\u6570\u636e\u6587\u4ef6\u5927\u5c0f\u4e3a2,000 bytes\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5c06\u5176\u6620\u5c04\u5230\u5185\u5b58\u5730\u57401,000,000-1,002,000\uff0c\u5982\u679c\u4f60\u8bbf\u95ee\u5730\u57401,000,042\uff0c\u90a3\u4f60\u4f1a\u5f97\u5230\u6570\u636e\u6587\u4ef6\u4e2d\u4ece\u7b2c42\u4e2a\u5b57\u8282\u5f00\u59cb\u7684\u6570\u636e\u3002\uff08\u5f53\u7136\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u4f1a\u628a\u6240\u6709\u6570\u636e\u90fdload\u5230\u5185\u5b58\u4e2d\uff0c\u53ea\u6709\u5f53\u4f60\u8bbf\u95ee\u5230\u65f6\uff0c\u624d\u4f1a\u653e\u5230\u5185\u5b58\u4e2d.\uff09 shared view\u7531\u6587\u4ef6\u76f4\u63a5\u6620\u5c04\uff0c\u5f53\u4fee\u6539\u4e86\u5185\u5b58\u4e2d\u7684\u6570\u636e\u540e\uff0cOS\u4f1a\u5c06\u4fee\u6539flush\u5230\u5bf9\u5e94\u7684\u6570\u636e\u6587\u4ef6\u4e2d\u3002\u8fd9\u662f\u5728\u6ca1\u6709journal\u7684\u60c5\u51b5\u4e0bmongod\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0cmongod\u4f1a\u6bcf60s\u5c06\u5185\u5b58\u4e2d\u7684\u4fee\u6539flush\u5230\u78c1\u76d8\u3002 \u5982\u679c\u542f\u7528\u4e86journal\uff0cmongod\u4f1a\u518d\u505a\u4e00\u6b21\u6620\u5c04\uff0c\u5c06shared view\u6620\u5c04\u5230private view\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u542f\u7528journal\u540e\u865a\u62df\u5185\u5b58\u7684\u4f7f\u7528\u91cf\u7ffb\u500d\u3002 \u7531\u4e8eprivate view\u662f\u7531shared view\u6620\u5c04\u6765\uff0c\u6240\u4ee5private view\u7684\u6539\u52a8\u4e0d\u80fd\u76f4\u63a5flush\u5230\u786c\u76d8\u3002 \u5f53mongod\u8fdb\u884c\u5199\u64cd\u4f5c\u65f6\uff0c\u4f1a\u4fee\u6539private view\u3002 \u7136\u540emongod\u4f1a\u5c06\u8fd9\u4e9b\u6539\u52a8\u7684\u63cf\u8ff0\u5199\u5230journal file, \u5728journal file\u4e2d\u8bb0\u5f55\u54ea\u4e9b\u6587\u4ef6\u7684\u54ea\u4e9b\u5b57\u8282\u88ab\u4fee\u6539\u3002 \u6539\u52a8\u7684\u63cf\u8ff0\u4f1a\u88ab\u8ffd\u52a0\u5230journal file\u4e4b\u540e\u3002 \u8fd9\u65f6\u5199\u64cd\u4f5c\u88ab\u6301\u4e45\u5316\uff0c\u4e0d\u4f1a\u4e22\u5931\u3002\u5982\u679cmongod crash\uff0c\u867d\u7136\u6539\u52a8\u6ca1\u8bb0\u5f55\u5230data file\u4e2d\uff0cjournal\u8fd8\u53ef\u4ee5replay\u8fd9\u90e8\u5206\u6539\u52a8\u3002 \u63a5\u4e0b\u6765journal\u4f1areplay shared view\u4e2d\u7684\u6539\u52a8\u3002 \u7136\u540emongod\u518d\u91cd\u65b0\u5c06shared view\u6620\u5c04\u5230private view\u4e2d\uff0c\u9632\u6b62private view\u4e2d\u6709\u592a\u591a\u7684\u6539\u52a8\u3002 \u6700\u540e\uff0cshared view\u4e2d\u7684\u6539\u52a8flush\u540e\u786c\u76d8\u4e2d\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0bmongod\u4f1a\u8981\u6c42OS\u6bcf60s flush\u4e00\u6b21\u3002\u6bcf\u6b21flush\u5b8c\u540e\uff0c\u4f1a\u5c06journal\u4e2dflush\u8fc7\u7684\u6539\u52a8\u5220\u9664\u3002 \u8fd9\u5c31\u662fjournal\u7684\u5de5\u4f5c\u539f\u7406\u3002\u611f\u8c22Richard\uff0c\u4ed6\u7ed9\u7684\u89e3\u91ca\u662f\u6211\u542c\u8fc7\u7684\u6700\u597d\u7684\uff08\u4eca\u5e74\u79cb\u5b63\u4ed6\u8fd8\u4f1a \u5728\u7ebf\u6559\u6388 MongoDB \uff09\u3002 Cost of a Journal \u4f7f\u7528journal\u540e\u5199\u64cd\u4f5c\u7684\u6027\u80fd\u4f1a\u964d\u4f4e5-30%\u3002 \u5bf9\u4e8e\u5199\u64cd\u4f5c\u975e\u5e38\u9891\u7e41\u7684\u7cfb\u7edf\u5efa\u8baejournal files\u548cdata files\u4f7f\u7528\u4e0d\u540c\u7684\u7269\u7406\u78c1\u76d8\uff0c\u5b83\u4eec\u90fd\u4f1aflush\u6570\u636e\u5230\u78c1\u76d8\uff0c\u82e5\u4f7f\u7528\u540c\u4e00\u4e2a\u4f1a\u4f7f\u7528Disk IO\u5ef6\u65f6\u589e\u5927\uff0c\u964d\u4f4e\u6027\u80fd\u3002 \u5bf9\u4e8e\u4ee5\u8bfb\u4e3a\u4e3b\u7684\u7cfb\u7edf\uff0c\u4e0d\u4f1a\u6709\u592a\u591a\u5f71\u54cd\u3002 \u53c2\u8003 http://www.slideshare.net/mongodb/mongodb-london-2013understanding-mongodb-storage-for-performance-and-data-safety-by-christian-kvalheim-10gen http://www.kchodorow.com/blog/2012/10/04/how-mongodbs-journaling-works/","tags":"misc","loc":"http://zhangliyong.github.io/posts/2014/02/18/mongodb-journal.html","title":"MongoDB Journal"},{"text":"MongoDB \u4f7f\u7528\u7cfb\u7edf\u8c03\u7528 mmap \u5c06\u6570\u636e\u6587\u4ef6\u6620\u5c04\u5230\u5185\u5b58\uff0c\u7136\u540e\u76f4\u63a5\u64cd\u4f5c\u5185\u5b58\u3002 \u8fd9\u6837\u7b80\u5316\u4e86MongoDB\u7684\u5f00\u53d1\uff0c\u53ef\u4ee5\u7701\u53bb\u590d\u6742\u7684\u5185\u5b58\u53ca\u78c1\u76d8\u64cd\u4f5c\u76f8\u5173\u7684\u4ee3\u7801\uff0c\u5b8c\u5168\u4e0d\u7528\u5173\u5fc3\u6587\u4ef6\u7cfb\u7edf\u7684\u7c7b\u578b\uff0cOS\u4f1a\u81ea\u52a8cache\u6570\u636e\uff0c\u5e76\u4f7f\u7528LRU\u7684\u65b9\u5f0f\uff0c\u800c\u4e14MongoDB\u91cd\u542f\u540e\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528cache\u4e2d\u7684\u6570\u636e\u3002 \u5f53\u7136\u4e5f\u4f1a\u6709\u7f3a\u70b9\uff0c\u6570\u636e\u6587\u4ef6\u788e\u7247(fragmentation)\u4f1a\u5f71\u54cd\u5185\u5b58\u7684\u4f7f\u7528\uff0c\u800c\u4e14\u64cd\u4f5c\u7cfb\u7edf\u7684 read-ahead \u4e5f\u4f1a\u5f71\u54cd\u5185\u5b58\u7684\u4f7f\u7528\uff0c\u5bf9\u4e8e\u7d22\u5f15\u6570\u636e\u6765\u8bf4\uff0ccache\u7684LRU\u65b9\u5f0f\u5e76\u4e0d\u5408\u9002\uff0c\u7d22\u5f15\u6570\u636e\u6700\u597d\u4e00\u76f4\u5728\u5185\u5b58\u4e2d\u3002 MongoDB \u8fdb\u7a0b\u7684\u865a\u62df\u5185\u5b58 virtual size = total files size + overhead(connections, heap) \u5982\u679cMongoDB\u542f\u52a8\u65f6\u542f\u7528\u4e86journal\uff0c\u5219virtual size\u4f1a\u7ffb\u500d\u3002 TODO: add mmap fundermentals \u53c2\u8003 http://www.slideshare.net/mongodb/mongodb-london-2013understanding-mongodb-storage-for-performance-and-data-safety-by-christian-kvalheim-10gen","tags":"misc","loc":"http://zhangliyong.github.io/posts/2014/02/18/mongodb-mmap.html","title":"MongoDB mmap"},{"text":"\u6211\u4eec\u90fd\u77e5\u9053MongoDB\u901a\u8fc7 mmap \u7684\u65b9\u5f0f\u5c06\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\u7684\u6570\u636e\u6587\u4ef6\u6620\u5c04\u5230\u5185\u5b58\u4e2d\u8fdb\u884c\u64cd\u4f5c\uff0c\u90a3MongoDB\u662f\u5982\u4f55\u7ec4\u7ec7\u6570\u636e\u6587\u4ef6\u7684\uff0c\u6700\u8fd1\u5728\u7f51\u4e0a\u627e\u4e86\u76f8\u5173\u8d44\u6e90\uff0c\u5728\u6b64\u505a\u4e00\u4e2a \u7ffb\u8bd1\u548c\u6c47\u603b , \u975e\u539f\u521b\uff0c\u539f\u6587\u5728\u4e0b\u9762\u7684\u53c2\u8003\u94fe\u63a5\u90e8\u5206\u3002 \u6211\u4eec\u6309\u7167\u4ece\u603b\u4f53\u5230\u5185\u90e8\u7684\u987a\u5e8f\u8fdb\u884c\u5206\u6790\uff0c Data Files \u6240\u6709\u7684 data files \u5b58\u50a8\u5728 dbpath \u53c2\u8003\u6240\u6307\u5b9a\u7684\u76ee\u5f55\u4e2d\uff0c\u5bf9\u5e94\u4e8e\u6bcf\u4e2a\u6570\u636e\u5e93\u90fd\u6709\u4e00\u4e2a \u3001namespace file, \u591a\u4e2ajournal file \u548c data file\u3002 $ ls - lh / data / db drwxr - xr - x 2 mongodb nogroup 4.0 K Feb 14 13 : 14 journal - rwxr - xr - x 1 mongodb nogroup 6 Feb 13 16 : 49 mongod . lock - rw ------- 1 mongodb nogroup 64 M Feb 14 13 : 15 test .0 - rw ------- 1 mongodb nogroup 128 M Feb 14 13 : 14 test .1 - rw ------- 1 mongodb nogroup 16 M Feb 14 13 : 15 test . ns drwxr - xr - x 2 mongodb nogroup 4.0 K Feb 14 13 : 15 _tmp mongod.lock \u662fMongoDB\u7684lock \u6587\u4ef6\uff0c\u53ef\u7528\u6765\u5224\u65ad\u4e0a\u6b21MongoDB\u662f\u5426\u6b63\u5e38shutdown\u3002 \u5176\u4f59\u7684\u6240\u6709\u6587\u4ef6\u4e3a test \u6570\u636e\u5e93\u7684\u6587\u4ef6\u3002 MongoDB \u91c7\u7528 aggressive pre-allocation\u7684\u65b9\u5f0f\u7533\u8bf7 data files\uff0c\u800c\u4e14\u603b\u4f1a\u591a\u7533\u8bf7\u4e00\u4e2a\u5907\u7528\u7684data file\uff0c\u5982\u4e0a\u9762\u7684test.1\u4e3a\u5907\u7528\u7684data file\u3002\u6570\u636e\u6587\u4ef6\u4f1a\u4ee5\u6307\u6570\u7ea7\u589e\u957f\uff0c\u6700\u5927\u4e3a2GB\u3002 namespace file \u5185\u5b58\u50a8\u4e86\u6240\u6709\u7684 collection\u4ee5\u53caindex\u3002 data file \u5b58\u50a8\u4e86\u6240\u6709\u7684document\u53caindex\u3002data file \u4ee5 extent\u4e3a\u903b\u8f91\u5b58\u50a8\u5355\u5143\uff0c\u6bcf\u4e2adata file\u5305\u542b\u591a\u4e2aextents. Extents \u6bcf\u4e2aextent\u88ab\u7528\u6765\u5b58\u50a8doucments\u6216\u8005index\u3002 extents\u4e0edata file\u4e4b\u95f4\u7684\u5173\u7cfb extents\u4e0enamespace file\u4e4b\u95f4\u7684\u5173\u7cfb NOTE : \u4e00\u4e2aextent\u53ea\u80fd\u5b58\u50a8\u4e00\u4e2acollection\u7684documents\u6216index\uff0c\u4e0d\u80fd\u540c\u65f6\u7528\u6765\u5b58\u50a8documents\u548cindex\u3002 \u4e00\u4e2acollection\u901a\u5e38\u4f1a\u6709\u591a\u4e2aextents\u3002 \u5f53\u9700\u8981\u4e00\u4e2a\u65b0\u7684extent\u65f6\u4f1a\u5728\u5f53\u524ddata file\u4e2d\u7533\u8bf7extent\uff0c\u5982\u679c\u5f53\u524ddata file\u7a7a\u95f4\u4e0d\u8db3\uff0c\u5219\u7533\u8bf7\u65b0\u7684data file. \u540c\u4e00\u4e2acollection\u7684\u6240\u6709extents\u901a\u8fc7\u6307\u9488\u8fde\u63a5\uff0cnamespace file\u4e2d\u7684collection\u53ea\u9700\u8981\u6307\u5411\u5176\u7b2c\u4e00\u4e2aextent\u5373\u53ef\u3002 \u6bcf\u4e2aextent\u4f1a\u5b58\u50a8\u4e00\u4e9bmetadata\uff0c\u5176\u4f59\u7a7a\u95f4\u5b58\u50a8records\u3002 Records \u6bcf\u4e00\u4e2arecord\u4f1a\u5b58\u50a8\u4e00\u4e9bmetadata\u53ca\u4e00\u4e2adocument\u3002 Indexes MongoDB\u7684\u7d22\u5f15\u662fBTree\u7ed3\u6784\uff0c\u5e8f\u5217\u5316\u5230\u78c1\u76d8\u8fdb\u884c\u5b58\u50a8\uff0c\u5b58\u50a8\u5728\u81ea\u5df1\u7684extents\u4e2d\uff0c\u800c\u4e14\u6bcf\u4e00\u4e2aindex\u6709\u4e00\u4e2a\u5355\u72ec\u7684namespace\uff0c\u5e76\u4e0d\u5c5e\u4e8e\u5176collection\u7684namespace. > db . system . namespaces . find () { \"name\" : \"test.system.indexes\" } { \"name\" : \"test.foo.$_id_\" } { \"name\" : \"test.foo\" } Metrics from db.stats() \u73b0\u5728\u6211\u4eec\u77e5\u9053\u4e86MongoDB\u7684\u6570\u636e\u7ec4\u7ec7\u65b9\u5f0f\uff0c\u4e0b\u9762\u5206\u6790\u4e00\u4e0b db.stats() \u7684\u8f93\u51fa\u6307\u6807\u6240\u4ee3\u8868\u7684\u542b\u4e49\u3002 dataSize dataSize \u662f\u6240\u6709 documents \u7684\u5927\u5c0f\u603b\u548c\uff0c\u5305\u62ec\u8fd9\u4e2adocument\u7684padding\uff0c\u4e5f\u662f\u6240\u6709records\u7684\u603b\u548c, \u5f53document\u88ab\u5220\u9664\u65f6dataSize\u4f1a\u53d8\u5c0f\uff0c\u4f46\u5f53\u51cf\u5c0fdocument\u5927\u5c0f\u65f6\uff0cdataSize\u4e0d\u4f1a\u53d8\u5316\u3002 storageSize storageSize\u662f\u6240\u6709extents\u7684\u5927\u5c0f\u603b\u548c\uff0c\u4f1a\u6bd4dataSize\u8981\u5927\uff0c\u56e0\u4e3a\u5b83\u4f1a\u5305\u62ecextents\u4e2d\u672a\u88ab\u4f7f\u7528\u7684\u7a7a\u95f4\uff0c\u4ee5\u53ca\u56e0document\u88ab\u5220\u9664\u53ca\u79fb\u52a8\u5e26\u6765\u7684\u7a7a\u95f2\u7a7a\u95f4\u3002 \u5f53\u5220\u9664\u6216\u51cf\u5c0fdocument\u65f6\uff0cstorageSize\u4e0d\u4f1a\u53d8\u5316\u3002 fileSize fileSize \u5305\u62ec\u6240\u6709\u7684data extents, index extents\u4ee5\u53cadata file\u4e2d\u672a\u4f7f\u7528\u7684\u7a7a\u95f4\uff0c\u662f\u6570\u636e\u5e93\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\u7684\u6587\u4ef6\u5927\u5c0f\u3002\u4f1a\u6bd4storageSize\u8981\u5927\uff0c\u56e0\u4e3a\u5b83\u8fd8\u5305\u62ecindex extents\uff0c\u4ee5\u53ca\u672a\u4f7f\u7528\u7684\u7a7a\u95f4\u3002 NOTE: dataSize \u548c storageSize \u90fd\u4e0d\u5305\u62ecindex\u3002 \u5f53\u5220\u9664\u6570\u636e\u5e93\u65f6\uff0cfileSize\u4f1a\u53d8\u5316\uff0c\u56e0\u4e3a\u6b64\u6570\u636e\u5e93\u76f8\u5e94\u7684data file\u4f1a\u88ab\u5220\u9664\uff0c\u4f46\u5f53\u5220\u9664collection\uff0cdocuments\u53caindex\u65f6fileSize\u4e0d\u4f1a\u53d8\u5316\u3002 nsSize namespace( test.ns )\u6587\u4ef6\u7684\u5927\u5c0f\u3002namespace file\u7684\u5927\u5c0f\u662f\u56fa\u5b9a\u7684\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539nssize\u53c2\u6570\u8c03\u6574\u3002 Fragmentation \u5f53\u6267\u884c update \u53ca remove \u64cd\u4f5c\u65f6\u4f1a\u4ea7\u751ffragmentation. \u5982\u679c\u6587\u6863\u7684\u5927\u5c0f\u4e0d\u56fa\u5b9a\uff0c\u800c\u4e14\u7ecf\u5e38\u53d1\u751f\u53d8\u5316\uff0c\u5219\u4f1a\u4ea7\u751f\u5927\u91cf\u7684 fragmentation\uff0c\u8fd9\u6837\u4f1a\u6d6a\u8d39\u5185\u5b58\u53ca\u78c1\u76d8\u7a7a\u95f4\uff0c\u589e\u52a0Disk IO\uff0c\u800c\u4e14\u7531\u4e8eupdate\u64cd\u4f5c\u5f15\u8d77\u7684\u6587\u6863\u79fb\u52a8\u8fd8\u4f1a\u5bfc\u81f4\u7d22\u5f15\u7684\u66f4\u65b0\uff0c\u4f7f\u5199\u64cd\u4f5c\u53d8\u6162\u3002\u53ef\u4ee5\u901a\u8fc7\u6bd4\u8f83 db.collection.stats() \u8f93\u51fa\u4e2d\u7684 size \u548c storageSize \u6765\u5224\u65adfragmentation\u7684\u72b6\u51b5\u3002 How to Combat \u5b9a\u65f6\u6267\u884c compact \uff0c\u4f1alock\u6570\u636e\u5e93\uff0c\u8981\u5728secondary\u4e0a\u6267\u884c\u3002 \u8bbe\u5b9a collection schema, \u4f7fdocument\u4e0d\u4f1a\u589e\u5927 pre-pad documents, \u4f7fdocument\u4e0d\u4f1a\u589e\u5927\u3002 \u4f7f\u7528\u4e0d\u540c\u7684collection, \u5c3d\u91cf\u4f7f\u7528 db.collection.drop() \u4ee3\u66ff db.collection.remove() \u5220\u9664\u6570\u636e \u8bbe\u7f6e usePowerOf2sizes \u63d0\u9ad8\u7a7a\u95f4\u7684\u91cd\u7528\u5ea6\u3002 MongoDB Exorcises File Fragmentation Demons \u4ecb\u7ecd\u4e86 usePowerOf2sizes \u6240\u5e26\u6765\u7684\u7a7a\u95f4\u5229\u7528\u7387\u53ca\u6027\u80fd\u7684\u63d0\u5347\u3002\u4e0d\u540c\u7684\u5e94\u7528\u573a\u666f\u5176\u6548\u679c\u4e5f\u4e0d\u4e00\u6837\u3002 \u53c2\u8003 http://www.slideshare.net/mongodb/mongodb-london-2013understanding-mongodb-storage-for-performance-and-data-safety-by-christian-kvalheim-10gen http://blog.mongolab.com/2014/01/how-big-is-your-mongodb/ http://linux.sys-con.com/node/2756958/mobile if (!document.getElementById('mathjaxscript_pelican')) { var s = document.createElement('script'); s.id = 'mathjaxscript_pelican'; s.type = 'text/javascript'; s.src = 'https:' == document.location.protocol ? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js' : 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; s[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(s); }","tags":"misc","loc":"http://zhangliyong.github.io/posts/2014/02/18/mongodb-storage-internals.html","title":"MongoDB Storage Internals"},{"text":"\u4eca\u5929\u5728\u4f7f\u7528 fabric \u4e2d\u7684 put \u51fd\u6570\u4e0a\u4f20\u6587\u4ef6\u5230\u670d\u52a1\u5668\u65f6\uff0c\u629b\u51fa Connection closed \u7684\u5f02\u5e38\uff0cGoogle \u4e4b\u540e\u53d1\u73b0 put \u4f7f\u7528 sftp \u8fdb\u884c\u4e0a\u4f20\uff0c\u4e8e\u662f\u4f7f\u7528 sftp \u8fde\u63a5\u670d\u52a1\u5668\uff1a $ sftp user @ domain . org Connecting to domain . org ... user @ domain . org ' s password : subsystem request failed on channel 0 Connection closed \u53d1\u73b0\u8fde\u63a5\u5931\u8d25. \u89e3\u51b3\u65b9\u6848\uff1a https://forums.gentoo.org/viewtopic-t-802682-start-0.html In your /etc/ssh/sshd_config (not ssh_config) file, you probably have a line like this: Code: Subsystem sftp / usr / lib / misc / sftp - server If so, it's the cause of this error message. That's especially true if your sftp user is logging into a chrooted environment, where \"/usr/lib\" probably does not exist. My own sftp server is configured this way. However, SSHD has the sftp functionality built-in and does not need to execute an external \"helper\" program like that. So, if you have a line like the above, it can be fixed by changing it to: Code: Subsystem sftp internal - sftp","tags":"misc","loc":"http://zhangliyong.github.io/posts/2014/02/17/sftp-in-ssh-config.html","title":"sftp in ssh config"},{"text":"\u6700\u8fd1\u5347\u7ea7\u4e86mongodb\uff0c\u7528mongo\u8fde\u63a5mongod\u540e\u51fa\u73b0\u5982\u4e0bwarning: Server has startup warnings : Mon Oct 29 14 : 45 : 23 [ initandlisten ] Mon Oct 29 14 : 45 : 23 [ initandlisten ] ** WARNING : You are running on a NUMA machine . Mon Oct 29 14 : 45 : 23 [ initandlisten ] ** We suggest launching mongod like this to avoid performance problems : Mon Oct 29 14 : 45 : 23 [ initandlisten ] ** numactl -- interleave = all mongod [ other options ] \u968f\u5373\u67e5\u4e86\u4e0b NUMA \u662f\u4ec0\u4e48\uff0c\u6709\u591a\u7bc7\u6587\u7ae0\u5747\u63d0\u5230\u4e86NUMA\u4f1a\u5bfc\u81f4mongodb\u7684\u6027\u80fd\u95ee\u9898\uff0c\u800c\u4e14\u5b98\u65b9\u6587\u6863\u4e5f\u6709\u8bf4\u660e\u3002 To disable NUMA for MongoDB, use the numactl command and start mongod in the following manner: numactl -- interleave = all / usr / bin / local / mongod Adjust the proc settings using the following command: echo 0 > / proc / sys / vm / zone_reclaim_mode To fully disable NUMA you must perform both operations. However, you can change zone_reclaim_mode without restarting mongod. For more information, see documentation on Proc/sys/vm. \u5728\u6b64\u505a\u4e00\u4e2a\u6574\u7406\uff1a NUMA\uff1aNUMA\u662f\u591a\u6838\u5fc3CPU\u67b6\u6784\u4e2d\u7684\u4e00\u79cd\uff0c\u5176\u5168\u79f0\u4e3aNon-Uniform Memory Access\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5728\u591a\u6838\u5fc3CPU\u4e2d\uff0c\u673a\u5668\u7684\u7269\u7406\u5185\u5b58\u662f\u5206\u914d\u7ed9\u5404\u4e2a\u6838\u7684\uff0c\u67b6\u6784\u7b80\u56fe\u5982\u4e0b\u6240\u793a\uff1a \u6bcf\u4e2a\u6838\u8bbf\u95ee\u5206\u914d\u7ed9\u81ea\u5df1\u7684\u5185\u5b58\u4f1a\u6bd4\u8bbf\u95ee\u5206\u914d\u7ed9\u5176\u5b83\u6838\u7684\u5185\u5b58\u8981\u5feb\uff0c\u6709\u4e0b\u9762\u51e0\u79cd\u8bbf\u95ee\u63a7\u5236\u7b56\u7565\uff1a \u7f3a\u7701(default)\uff1a\u603b\u662f\u5728\u672c\u5730\u8282\u70b9\u5206\u914d\uff08\u5206\u914d\u5728\u5f53\u524d\u8fdb\u7a0b\u8fd0\u884c\u7684\u8282\u70b9\u4e0a\uff09\uff1b \u7ed1\u5b9a(bind)\uff1a\u5f3a\u5236\u5206\u914d\u5230\u6307\u5b9a\u8282\u70b9\u4e0a\uff1b \u4ea4\u53c9(interleave)\uff1a\u5728\u6240\u6709\u8282\u70b9\u6216\u8005\u6307\u5b9a\u7684\u8282\u70b9\u4e0a\u4ea4\u7ec7\u5206\u914d\uff1b \u4f18\u5148(preferred)\uff1a\u5728\u6307\u5b9a\u8282\u70b9\u4e0a\u5206\u914d\uff0c\u5931\u8d25\u5219\u5728\u5176\u4ed6\u8282\u70b9\u4e0a\u5206\u914d\u3002 \u4e0a\u9762\u6587\u7ae0\u4e2d\u6700\u540e\u4f7f\u7528numactl \u2013interleave\u547d\u4ee4\u5c31\u662f\u6307\u5b9a\u5176\u4e3a\u4ea4\u53c9\u5171\u4eab\u6a21\u5f0f\u3002 \u6211\u4eec\u77e5\u9053\u865a\u62df\u5185\u5b58\u673a\u5236\u662f\u901a\u8fc7\u4e00\u4e2a\u4e2d\u65ad\u4fe1\u53f7\u6765\u901a\u77e5\u865a\u62df\u5185\u5b58\u7cfb\u7edf\u8fdb\u884c\u5185\u5b58swap\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2airqbalance\u8fdb\u7a0b\u5fd9\uff0c\u662f\u4e00\u4e2a\u5371\u9669\u4fe1\u53f7\uff0c\u5728\u8fd9\u91cc\u662f\u7531\u4e8e\u5728\u8fdb\u884c\u9891\u7e41\u7684\u5185\u5b58\u4ea4\u6362\u3002\u8fd9\u79cd\u9891\u7e41\u4ea4\u6362\u73b0\u8c61\u79f0\u4e3aswap insanity\uff0c\u5728MySQL\u4e2d\u7ecf\u5e38\u63d0\u5230\uff0c\u4e5f\u5c31\u662f\u5728NUMA\u6846\u67b6\u4e2d\uff0c\u91c7\u7528\u4e0d\u5408\u9002\u7684\u7b56\u7565\uff0c\u5bfc\u81f4\u6838\u5fc3\u53ea\u80fd\u4ece\u6307\u5b9a\u5185\u5b58\u5757\u8282\u70b9\u4e0a\u5206\u914d\u5185\u5b58\uff0c\u5373\u4f7f\u603b\u5185\u5b58\u8fd8\u6709\u5bcc\u4f59\uff0c\u4e5f\u4f1a\u7531\u4e8e\u5f53\u524d\u8282\u70b9\u5185\u5b58\u4e0d\u8db3\u65f6\u4ea7\u751f\u5927\u91cf\u7684swap\u64cd\u4f5c\u3002 Install \u5728Ubuntu\u4e0b\u4ee5numactl\u7684\u547d\u4ee4\u542f\u52a8mongodb\uff0c\u8981\u5148\u5b89\u88c5numactl sudo apt - get install numactl \u53c2\u8003\uff1a http://docs.mongodb.org/manual/administration/production-notes/#production-numa http://huoding.com/2011/08/09/104 http://blog.jcole.us/2010/09/28/mysql-swap-insanity-and-the-numa-architecture/ http://blog.nosqlfan.com/html/2772.html","tags":"misc","loc":"http://zhangliyong.github.io/posts/2014/02/16/mongodb-numa-dao-zhi-de-xing-neng-wen-ti.html","title":"Mongodb NUMA \u5bfc\u81f4\u7684\u6027\u80fd\u95ee\u9898"},{"text":"TODO: wrap my plugins auto reload .vimrc augroup reload_vimrc \" { autocmd ! autocmd BufWritePost $ MYVIMRC source $ MYVIMRC augroup END \" } http://www.bestofvim.com/tip/auto-reload-your-vimrc/ if (!document.getElementById('mathjaxscript_pelican')) { var s = document.createElement('script'); s.id = 'mathjaxscript_pelican'; s.type = 'text/javascript'; s.src = 'https:' == document.location.protocol ? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js' : 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; s[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(s); }","tags":"misc","loc":"http://zhangliyong.github.io/posts/2014/02/16/vim.html","title":"vim"},{"text":"\u968f\u673aMongoDB\u7684\u6570\u636e\u91cf\u589e\u5927\uff0c\u6211\u4eec\u670d\u52a1\u5668\u7684\u78c1\u76d8\u5229\u7528\u7387\u4e0d\u6570\u636e\u589e\u52a0\uff0c\u4e00\u5ea6\u63a5\u8fd1100%\uff0c\u800c\u4e14 Disk IO\u6210\u4e3aMongoDB\u7684\u6027\u80fd\u74f6\u9888\uff0c\u5728\u8fdb\u884csharding\u4e4b\u524d\uff0c\u6211\u4eec\u51b3\u5b9a\u5148\u8fc1\u79fb\u5230\u4f7f\u7528SSD\u7684\u670d\u52a1 \u5668\uff0c\u4e0b\u9762\u6211\u5229\u7528 mongoperf \u5de5\u5177\u5bf9HHD\u548cSSD\u7684 R/W \u8fdb\u884c\u4e86\u4e00\u4e2a\u6d4b\u8bc4\u3002 \u7ed3\u679c\u5982\u4e0b\uff1a ##Read echo \"{nThreads:32,fileSizeMB:2000,r:true}\" | ./bin/mongoperf ###HHD new thread, total running : 32 2093 ops/sec 8 MB/sec 1963 ops/sec 7 MB/sec 2010 ops/sec 7 MB/sec 2044 ops/sec 7 MB/sec 2061 ops/sec 8 MB/sec 2011 ops/sec 7 MB/sec ###SSD new thread, total running : 32 37804 ops/sec 147 MB/sec 33013 ops/sec 128 MB/sec 36563 ops/sec 142 MB/sec 38056 ops/sec 148 MB/sec 39058 ops/sec 152 MB/sec 39036 ops/sec 152 MB/sec 32946 ops/sec 128 MB/sec 42343 ops/sec 165 MB/sec 40949 ops/sec 159 MB/sec ##Write echo \"{nThreads:32,fileSizeMB:2000,w:true}\" | ./bin/mongoperf ###HHD new thread, total running : 32 3 ops/sec 0 MB/sec 485 ops/sec 1 MB/sec 1543 ops/sec 6 MB/sec 679 ops/sec 2 MB/sec 1059 ops/sec 4 MB/sec 1383 ops/sec 5 MB/sec 674 ops/sec 2 MB/sec 740 ops/sec 2 MB/sec 572 ops/sec 2 MB/sec 679 ops/sec 2 MB/sec 0 ops/sec 0 MB/sec 1134 ops/sec 4 MB/sec ###SSD new thread, total running : 32 read:0 write:1 993 ops/sec 3 MB/sec 2160 ops/sec 8 MB/sec 312 ops/sec 1 MB/sec 493 ops/sec 1 MB/sec 7570 ops/sec 29 MB/sec 10026 ops/sec 39 MB/sec 3120 ops/sec 12 MB/sec 514 ops/sec 2 MB/sec 903 ops/sec 3 MB/sec 1503 ops/sec 5 MB/sec 2413 ops/sec 9 MB/sec \u53ef\u4ee5\u770b\u5230HHD\u7684\u8bfb\u53d6\u901f\u5ea6\u4e3a6-7MB/s\uff0cSSD\u7684\u4e3a150MB/s\u5de6\u53f3\uff0c\u4e3aHHD\u768420\u591a\u500d\u3002 \u518d\u770b\u5199\u7684\u901f\u5ea6\uff0cHHD\u6700\u9ad8\u4e3a6MB/s\uff0cSSD\u6700\u9ad8\u4e3a39MB/s\uff0c\u4e3aHHD\u76846\u500d\u591a\u3002 \u4f7f\u7528SSD\u540e\uff0c\u53ef\u4ee5\u5927\u5927\u51cf\u5c0fDisk IO\u7684\u5ef6\u65f6\uff0c\u63d0\u9ad8MongoDB\u54cd\u5e94\u901f\u5ea6\uff0c \u4f46SSD\u7684\u4ef7\u683c\u6bd4\u8f83\u9ad8\uff0c\u5982\u679c\u5b66\u7740SSD\u6027\u4ef7\u6bd4\u4f4e\uff0c\u53ef\u4ee5\u914d\u7f6esharding\u3002","tags":"misc","loc":"http://zhangliyong.github.io/posts/2014/02/16/ssd-vs-hhd.html","title":"ssd-vs-hhd"},{"text":"ack \u662f\u4e00\u4e2a\u7c7b\u4f3c\u4e8egrep\u7684\u5de5\u5177\uff0c\u4e13\u95e8\u9488\u5bf9\u7a0b\u5e8f\u5458\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u4e3b\u8981\u7528\u4e8e\u641c\u7d22\u6e90\u4ee3\u7801\uff0c\u9ed8\u8ba4\u5ffd\u7565\u975e\u4ee3\u7801\u6587\u4ef6\uff0c\u652f\u6301\u5927\u90e8\u5206\u7f16\u7a0b\u8bed\u8a00\u3002\u5728\u5404\u5e73\u53f0\u7684\u5b89\u88c5\u53c2\u8003\u5176\u5b98\u65b9\u7f51\u7ad9 http://beyondgrep.com/ \u3002 ack.vim \u662fack\u7684vim\u63d2\u4ef6\uff0c\u53ef\u5728vim\u4e0b\u76f4\u63a5\u4f7f\u7528ack\u3002 ack\u53ef\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u8c03\u6574\u641c\u7d22\u884c\u4e3a\uff0c\u5982\u589e\u52a0\u65b0\u7f16\u7a0b\u8bed\u8a00\u7684\u6280\u672f\u7b49\u3002 \u7c7b\u4f3c\u4e8e\u5927\u90e8\u5206unix\u7a0b\u5e8f\uff0cack\u6709\u5168\u5c40\u914d\u7f6e(/etc/ackrc)\uff0c\u7528\u6237\u914d\u7f6e(~/.ackrc)\uff0c\u5de5\u7a0b\u914d\u7f6e(.ackrc)\u7b49\uff0c\u53ef\u53c2\u8003\u5176manpage\u3002 \u4e0b\u9762\u5217\u51fa\u672c\u4eba\u7684\u7528\u6237\u914d\u7f6e(~/.ackrc): -- smart - case -- sort - files -- type - set = rst : ext : rst , txt -- type - set = md : ext : mkd , md , markdown -- type - set = dotfile : match :/&#94; \\ .. +/ -- nodotfile \u589e\u52a0\u5bf9Markdown\u548creStructuredText\u6587\u4ef6\u7684\u652f\u6301\uff0c\u5e76\u5ffd\u7565\u6240\u6709\u4ee5\".\"\u5f00\u5934\u7684\u9690\u85cf\u6587\u4ef6\u3002","tags":"misc","loc":"http://zhangliyong.github.io/posts/2014/02/04/vim-ack.html","title":"ack.vim"},{"text":"\u4e0b\u9762\u5217\u51fa\u4e00\u4e9b\u81ea\u5df1\u5e38\u7528\u7684\u7cfb\u7edf\u7ba1\u7406\u7684\u5de5\u5177\uff0c\u603b\u7ed3\u4e00\u4e0b\u3002 htop htop \u662f\u4e00\u4e2a\u66ff\u4ee3top\u7684\u5de5\u5177\uff0c\u663e\u793a\u4fe1\u606f\u5f88\u8be6\u7ec6\uff0c\u529f\u80fd\u4e30\u5bcc\uff0c\u4e00\u4f46\u4e0a\u624b\u64cd\u4f5c\u4e5f\u5f88\u7b80\u5355\uff0c thegeekstuff \u4e0a\u6709 \u4e00\u7bc7\u6587\u7ae0\u4e13\u95e8\u4ecb\u7ecd\u4e86\u8fd9\u4e00\u5de5\u5177\uff0c\u6b63\u5982\u8fd9\u7bc7\u6587\u7ae0\u4e0a\u8bf4\u7684\uff1a\u4f60\u4e00\u4f46\u5f00\u59cb\u5373\u7528htop\uff0c\u5c31\u4e0d\u518d\u56de\u5230top\u4e86\u3002 iftop iftop \u5b9e\u65f6\u663e\u793a\u7f51\u5361\u7684\u5e26\u5bbd\u4f7f\u7528\u60c5\u51b5\u3002 iotop iotop \u662f\u7528python\u7f16\u5199\u7684\u663e\u793a\u78c1\u76d8IO\u4f7f\u7528\u7684\u5e94\u7528\uff0cvmstat\u548ciostat\u53ef\u4ee5\u663e\u793a\u78c1\u76d8\u7684\u6574\u4f53\u4f7f\u7528\u60c5\u51b5\uff0ciotop \u53ef\u4ee5\u663e\u793a\u5404\u4e2a\u5e94\u7528\u7684\u78c1\u76d8\u4f7f\u7528\u3002","tags":"misc","loc":"http://zhangliyong.github.io/posts/2014/02/04/linux-sysadmin-tools.html","title":"Linux Sysadmin Tools"},{"text":"\u4eca\u5929\u5728\u9605\u8bfb Django performance tips \u65f6\u53d1\u73b0\u5173\u95edkeepalive\u53ef\u4ee5\u63d0\u9ad8\u6548\u7387\uff0c\u539f\u6587\u5982\u4e0b\uff1a Turn off KeepAlive I don't totally understand how KeepAlive works, but turning it off on our Django servers increased performance by something like 50%. Of course, don't do this if the same server is also serving media\u2026 but you're not doing that, right? HTTP keep-alive\u5373\u662fHTTP persistent connection\uff0c\u7ef4\u57fa\u767e\u79d1\u6709\u8be6\u7ec6\u8bf4\u660e\uff1ahttp://en.wikipedia.org/wiki/HTTP_persistent_connection \u5982\u679c\u4f7f\u7528keep-alive\u529f\u80fd\uff0c\u591a\u4e2ahttp\u8bf7\u6c42\u4f1a\u4f7f\u7528\u540c\u4e00\u4e2atcp\u8fde\u63a5\uff0c\u8fd9\u6837\u53ef\u8282\u7701\u591a\u6b21\u5efa\u7acb\u8fde\u63a5\u7684\u65f6\u95f4\u53ca\u8d44\u6e90\u6d88\u8017\uff0c \u4e0b\u56fe\u663e\u793a\u4e86\u662f\u5426\u4f7f\u7528keep-alive\u529f\u80fd\u7684tcp\u8fde\u63a5\u5bf9\u6bd4\u56fe\uff1a http 1.0\u9ed8\u8ba4\u4e0d\u5f00\u542f\uff0c\u53ef\u8fdb\u884c\u6307\u5b9a\uff0chttp 1.1\u9ed8\u8ba4\u5f00\u542f\u3002 \u4e0a\u9762\u6211\u4eec\u770b\u5230\u542f\u7528keep-alive\u53ef\u8282\u7701\u591a\u6b21\u5efa\u7acb\u8fde\u63a5\u7684\u65f6\u95f4\uff0c\u4f46\u662f\u670d\u52a1\u5668\u7aef\u8981\u4fdd\u6301\u8fde\u63a5\u72b6\u6001(nginx\u9ed8\u8ba4\u4fdd\u630174s)\uff0c \u8fd9\u6837\u4f1a\u5f71\u54cd\u670d\u52a1\u5668\u7aef\u7684\u6027\u80fd\u3002 \u800c\u4e14\u76ee\u524d\u7f51\u7edc\u5e26\u5bbd\u6bd4\u8f83\u5927\uff0c\u5efa\u7acb\u8fde\u63a5\u7684\u5ef6\u65f6\u6bd4\u8f83\u5c11\uff0c \u6240\u4ee5keep-alive\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\u4f1a\u5bfc\u81f4\u6027\u80fd\u4e0b\u964d\u3002\u8fd9\u5c31\u9a8c\u8bc1\u4e86\u4e00\u5f00\u59cb\u90a3\u7bc7\u6587\u7ae0\u6307\u51fa\u7684\u5728django servers\u4e2d\u5173\u95edkeep-alive \u529f\u80fd\u53ef\u5927\u7ea6\u63d0\u534750%\u7684\u6027\u80fd\u3002 \u6240\u4ee5\u5efa\u8bae\u5173\u7cfbkeep-alive\u529f\u80fd\uff0c\u9664\u975e\u6709\u7279\u6b8a\u9700\u6c42\u3002 \u4e0b\u9762\u4ecb\u7ecd\u5982\u4f55nginx\u4e2d\u5173\u7cfbkeep-alive\u529f\u80fd nginx\u6587\u6863 \u4e2d\u6709\u8be6\u7ec6\u8bf4\u660e: keepalive_timeout Syntax: keepalive_timeout timeout [ header_timeout ] Default: 75s Context: http server location Reference: keepalive_timeout The first parameter assigns the timeout for keep-alive connections with the client. The server will close connections after this time. The optional second parameter assigns the time value in the header Keep-Alive: timeout=time of the response. This header can convince some browsers to close the connection, so that the server does not have to. Without this parameter, nginx does not send a Keep-Alive header (though this is not what makes a connection \"keep-alive\"). \u5982\u679c\u6211\u4eec\u8981\u5173\u95edkeep-alive\u529f\u80fd\uff0c\u53ef\u5728http, server\u6216location\u4e2d\u8bbe\u7f6e keepalive_timeout 0; \u5982\uff1a server { listen port ; server_name address ; access_log / var / log / nginx / mysite - access . log ; error_log / var / log / nginx / mysite - error . log ; keepalive_timeout 0 ; location / { ........ } } \u4e0b\u56fe\u7ed9\u51fa\u4e86keepalive_timeout\u8bbe\u7f6e\u524d\u540e\uff0chttp\u8bf7\u6c42\u7684header\u4e2dconnection\u7684\u53d8\u5316\uff1a \u8bbe\u7f6e keepalive_timeout 0; \u4e4b\u540e\uff1a \u7b14\u8005\u5e76\u6ca1\u6709\u5bf9keep-alive\u505a\u76f8\u5e94\u6027\u80fd\u65b9\u9762\u7684benchmark\uff0c\u6240\u4ee5\u4e0d\u786e\u5b9akeep-alive\u5bf9\u6027\u80fd\u7684\u5f71\u54cd\uff0c\u800c\u4e14keep-alive\u5bf9\u6027\u80fd\u7684\u5f71\u54cd\u4e5f\u4e0e\u5e94\u7528\u573a\u666f\u6709\u5173\u3002","tags":"misc","loc":"http://zhangliyong.github.io/posts/2014/02/03/http-keep-alive.html","title":"HTTP keep-alive"},{"text":"\u672c\u6587\u63d0\u4f9b\u4e86\u53e6\u4e00\u79cd\u6784\u9020generalized suffix tree\u7684\u65b9\u6cd5\uff0c\u4e0d\u9700\u8981\u4e3a\u6bcf\u4e2a\u5b57\u7b26\u4e32\u6dfb\u52a0\u60df\u4e00\u7684\u5b57\u7b26\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e3a\u4efb\u610f\u6570\u91cf\u7684\u5b57\u7b26\u4e32\u6784\u9020\u540e\u7f00\u6811\u3002 \u6784\u9020\u539f\u7406\u4f9d\u7136\u91c7\u7528Ukkonen\u63d0\u51fa\u7684\u7b97\u6cd5\u3002\u4e0b\u9762\u6211\u4eec\u7531\u7b80\u5165\u6df1\u5206\u522b\u4ecb\u7ecd\u6b64\u79cd\u65b9\u5f0f\u5e94\u5bf9\u7684\u95ee\u9898\u3002 \u524d\u8a00 \u540e\u7f00\u6811\u53ef\u4ee5\u7528\u6765\u5feb\u901f\u7684\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u641c\u7d22\uff0c\u8be6\u7ec6\u4fe1\u606f\u63a8\u8350\u9605\u8bfb\uff1ahttp://en.wikipedia.org/wiki/Suffix_tree\uff0c \u540e\u7f00\u6811\u7684\u641c\u7d22\u975e\u5e38\u5feb\uff0c\u4f46\u662f\u6784\u9020\u540e\u7f00\u6811\u6bd4\u8f83\u590d\u6742\uff0c Ukkonen\u63d0\u51fa\u7684\u6784\u9020\u540e\u7f00\u6811\u7684\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(nlogn), \u6784\u9020\u539f\u7406\u9605\u8bfb http://stackoverflow.com/questions/9452701/ukkonens-suffix-tree-algorithm-in-plain-english\uff0c\u672c\u6587\u4e5f\u662f\u5728\u6b64\u94fe\u63a5 \u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u8bf4\u660e\u7684\u3002 \u6240\u4ee5\u5728\u7ee7\u7eed\u9605\u8bfb\u524d\u786e\u4fdd\u4f60\u5df2\u7ecf\u9605\u8bfb\u4e86\u6b64\u94fe\u63a5\u7684\u5185\u5bb9\u3002 suffix tree\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u6240\u6709\u540e\u7f00\u7ec4\u6210\u7684\u4e00\u68f5\u6811\u3002 \u5728\u5f88\u591a\u60c5\u51b5\u4e0b\u6211\u4eec\u6709\u591a\u4e2a\u5b57\u7b26\u4e32\uff0c\u9700\u8981\u4e3a\u8fd9\u4e9b\u5b57\u7b26\u4e32\u6784\u9020\u540c\u4e00\u68f5\u540e\u7f00\u6811\uff0c\u5373\u662fgeneralized suffix tree\uff0c\u4f8b\u5982\u67e5\u8be2\u5305\u542b'abc'\u7684\u6240\u6709\u5b57\u7b26\u4e32\u3002 \u5982\u9700\u8981\u4e3an\u4e2a\u5b57\u7b26\u4e32\uff08\u5982s1, s2, s3, ..., sn\uff09\u6784\u9020\u540e\u7f00\u6811\uff0c\u76ee\u524d\u901a\u7528\u7684\u505a\u6cd5\u662f\u627e\u5230n\u4e2a\u4e0d\u540c\u7684\u5b57\u7b26, \u5982u1, u2,..., un\uff0c \u8fd9n\u4e2a\u5b57\u7b26\u662f\u60df\u4e00\u7684\uff0c\u4e14\u4e0d\u4f1a\u51fa\u73b0\u5728\u6240\u6709\u7684\u5b57\u7b26\u4e32\u4e2d\uff0c\u7136\u540e\u5c06\u6bcf\u4e2a\u5b57\u7b26\u52a0\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32\u540e\uff0c\u5e76\u5c06\u5b83\u4eec\u5408\u5e76\uff0c\u7ec4\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\uff1a s=s1u1s2u2.....snun\uff0c\u5e76\u4e3as\u6784\u9020\u540e\u7f00\u6811\u3002 \u4f8b\u5982\u4e3a\"ab\", \"abc\"\u6784\u9020\u540e\u7f00\u6811\uff0c\u627e\u5230\u4e24\u4e2a\u5b57\u7b26\"#\", \"$\"\uff0c\u6211\u4eec\u5f97\u5230\u5b57\u7b26\u4e2dabc#abcde$\"\uff0c\u7136\u540e\u4e3a\u5176\u6784\u9020\u540e\u7f00\u6811\uff0c\u5982\u56fe: \u5f53\u6709\u5c11\u91cf\u5b57\u7b26\u4e32\u7684\u65f6\u5019\uff0c\u8fd9\u79cd\u65b9\u5f0f\u6bd4\u8f83\u5b9e\u7528\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u8f7b\u6613\u627e\u5230n\u4e2a\u4e0d\u540c\u7684\u5b57\u7b26\uff0c\u5f53\u5b57\u7b26\u4e32\u6bd4\u8f83\u591a\u65f6\uff0c \u6211\u4eec\u5f88\u96be\u627e\u5230\u8fd9\u4e48\u591a\u4e0d\u540c\u7684\u5b57\u7b26\u3002\u76ee\u524dunicode\u7684\u7801\u70b9\u662f\u4ece0\u52300x10ffff\uff0c\u4e5f\u5c31\u662funicode\u6700\u591a\u80fd\u8868\u793a1114111\u4e2a\u5b57\u7b26\uff0c\u4ec5\u4ec5\u662f\u767e\u4e07\u7ea7\u3002 \u6240\u4ee5\u5047\u5982\u6211\u4eec\u6709\u5343\u4e07\u7ea7\u7684\u5b57\u7b26\u4e32\u65f6\uff0c\u6211\u4eec\u5c31\u627e\u4e0d\u5230\u5982\u6b64\u591a\u7684\u5b57\u7b26\u4e86\u3002 \u6211\u4eec\u63d0\u4f9b\u4e86\u53e6\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u3002 \u51c6\u5907 \u6211\u4eec\u5728\u539f\u6709\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u4e86\u6539\u8fdb\u3002 \u4e3a\u6bcf\u4e2a\u5b57\u7b26\u4e32\u8bbe\u7f6e\u4e00\u4e2a\u60df\u4e00\u7684\u7d22\u5f15(index)\uff0c\u7528\u4e8e\u6807\u8bc6\u6b64\u5b57\u7b26\u4e32\uff0c\u6839\u636e\u7d22\u5f15\u53ef\u627e\u5230\u539f\u6765\u7684\u5b57\u7b26\u4e32\u3002 \u9664\u6839\u7ed3\u70b9\u4ee5\u5916\u7684\u6240\u6709\u7ed3\u70b9\u90fd\u6709suffix link\u3002\u8bf4\u660e\u4e3a\u4ec0\u4e48\u52a0suffix link \u6bcf\u6761\u8fb9\u6709\u4e09\u4e2a\u5c5e\u6027index, start, length\uff0c\u6839\u636e\u8fd9\u4e09\u4e2a\u5c5e\u6027\u53ef\u627e\u5230\u6b64\u8fb9\u4ee3\u8868\u7684\u5b57\u7b26\u4e32\u3002 \u53f6\u7ed3\u70b9\u4f1a\u5b58\u50a8\u7d22\u5f15\u503c\uff08\u6709\u4e9b\u7ed3\u70b9\u5373\u4e3a\u53f6\u7ed3\u70b9\u4e5f\u4e3a\u4e2d\u95f4\u7ed3\u70b9\uff09\u3002 //TODO \u8bf4\u660e\u4e3a\u4ec0\u4e48\u52a0\u7d22\u5f15 \u7b2c3\u6761\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u7b2c1\u6761\u662f\u4e3a\u7b2c3\u30014\u6761\u51c6\u5907\u7684\uff0c\u662f\u4e3a\u964d\u4f4e\u7a7a\u95f4\u590d\u6742\u5ea6\u3002\u4e0b\u9762\u6211\u4eec\u5bf92\u30013\u8fdb\u884c\u8bf4\u660e\u3002 \u4ece\u6839\u7ed3\u70b9\u5230\u6bcf\u4e2a\u53f6\u7ed3\u70b9\u7684\u8def\u5f84\u4ee3\u8868\u4e00\u4e2a\u5b57\u7b26\u6216\u591a\u4e2a\u5b57\u7b26\u4e32\u7684\u540e\u7f00\uff0c\u53f6\u7ed3\u70b9\u4e0a\u7684\u7d22\u5f15\u5373\u662f\u8fd9\u4e9b\u5b57\u7b26\u4e32\u7684\u7d22\u5f15\u3002 \u57fa\u672c \u4ee5\u5b57\u7b26\u4e32\"ab\"\u4e3a\u4f8b\uff0c\u5176\u540e\u7f00\u6811\u4e3a\uff1a \u8bbe\u7f6e\"ab\"\u7684\u7d22\u5f15\u4e3a0\uff0c\u5c06\u7d22\u5f15\u52a0\u5230\u53f6\u7ed3\u70b9\u4e2d\u4e3a: \u6269\u5c55\u4e00 \u5b57\u7b26\u4e32\u672b\u5c3e\u5b57\u7b26\u4e3a\u91cd\u590d\u5b57\u7b26\uff0c\u4e3a\"aba\"\u4e3a\u4f8b\uff0c \u4e3a\u5176\u6784\u9020\u540e\u7f00\u6811\u5e76\u5c06\u7d22\u5f15\u52a0\u5230\u53f6\u7ed3\u70b9\u540e\uff1a \u6b64\u65f6active point\u4e3a(root, 'a', 1), remainder\u4e3a1\uff0c\u5373\u6211\u4eec\u8fd8\u6709\u4e00\u4e2a\u540e\u7f00\uff0c\u9690\u542b\u5728\u540e\u7f00\u6811\u4e2d\uff0c \u800c\u6b64\u65f6\u5b57\u7b26\u4e32\u4e2d\u6240\u6709\u7684\u5b57\u7b26\u90fd\u5df2\u52a0\u5230\u540e\u7f00\u6811\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u6b64\u540e\u7f00\u521b\u5efa\u4e00\u4e2a\u53f6\u7ed3\u70b9\uff0c\u5e76\u5c06\u7d22\u5f150\u52a0\u5230\u53f6\u7ed3\u70b9\u4e2d\u3002 \u5982\u56fe\uff1a \u7ea2\u8272\u7684\u7ed3\u70b9\u5373\u662f\u6211\u4eec\u521b\u5efa\u7684\uff0c\u8fd9\u4e2a\u7ed3\u70b9\u5373\u662f\u53f6\u7ed3\u70b9\u4e5f\u662f\u4e2d\u95f4\u7ed3\u70b9\uff0c\u5bf9\u4e8e\u540e\u7f00'a'\u6765\u8bf4\u662f\u53f6\u7ed3\u70b9\uff0c \u5bf9\u4e8e\u540e\u7f00'aba'\u6765\u8bf4\u662f\u4e2d\u95f4\u7ed3\u70b9\u3002 \u5bf9\u4e8e\u53f6\u7ed3\u70b9\u5728\u521b\u5efa\u7684\u65f6\u5019\u6211\u4eec\u5373\u53ef\u5c06\u7d22\u5f15\u52a0\u5230\u53f6\u7ed3\u70b9\u4e2d\u3002 \u5f53\u5b57\u7b26\u4e32\u7684\u6240\u6709\u5b57\u7b26\u90fd\u52a0\u5165\u5230\u540e\u7f00\u6811\u4e4b\u540e\uff0cremainder\u7684\u503c\u5373\u662f\u9690\u5f0f\u540e\u7f00\u7684\u6570\u91cf\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u8fd9\u4e9b\u540e\u7f00\u6307\u5b9a\u7d22\u5f15\u3002 \u5982\u679cactive length\u4e3a0\uff0c\u4e0d\u9700\u8981\u521b\u5efa\u7ed3\u70b9\uff0c\u53ea\u9700\u8981\u5c06\u7d22\u5f15\u52a0\u5165\u5230active node\u4e2d\u5373\u53ef\u3002 \u5982\u5b57\u7b26\u4e32\"abcabdab\"\uff0c\u5c06\u6240\u4ee5\u5b57\u7b26\u52a0\u5230\u540e\u7f00\u6811\u540e\uff1a \u6b64\u65f6active point\u4e3a(blue node, \\0, 0), remainder\u4e3a2\u3002 \u540e\u7f00\"ab\", \"a\"\u4e3a\u9690\u5f0f\uff0c\u6b64\u65f6active length\u4e3a0\uff0c\u5c06\u7d22\u5f15\u52a0\u5230active node\u4e2d\u540e\uff0c\u5982\u56fe\uff1a \u6269\u5c55\u4e8c \u5728\u540e\u7f00\u6811\u4e2d\u52a0\u5165\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\u3002 \u5728\u52a0\u5165\u65b0\u7684\u5b57\u7b26\u4e32\u4e4b\u524d\uff0c\u9700\u8981\u91cd\u7f6eactive point\u4e3a(root, '\\0', 0)\u3002 \u4ee5\u5b57\u7b26\u4e32\"ab\", \"abc\"\u4e3a\u4f8b, \"ab\"\u7684\u7d22\u5f15\u4e3a0, \"abc\"\u7684\u7d22\u5f15\u4e3a1\uff0c \"ab\"\u7684\u540e\u7f00\u6811\uff1a \u6211\u4eec\u9700\u8981\u5411\u6b64\u540e\u7f00\u6811\u4e2d\u52a0\u5165\u5b57\u7b26\u4e32\"abc\"\uff0c \u5728\u6211\u4eec\u52a0\u5165\u5b57\u7b26'ab'\u4e4b\u540e\uff0c\u540e\u7f00\u5e76\u6ca1\u6709\u53d1\u751f\u53d8\u5316\uff0c\u6b64\u65f6active point\u4e3a(blue node, '\\0', 0)\uff0cremainder\u4e3a2. \u6211\u4eec\u7ee7\u7eed\u52a0\u5165\u5b57\u7b26\"c\"\uff0c\u5728active node\u4e0b\u52a0\u5165\u4e00\u6761\u8fb9\uff0c\u5982\u56fe\uff1a \u6b64\u65f6remainder\u53d8\u4e3a2\uff0cactive node\u6307\u5411\u7ea2\u8272\u7ed3\u70b9\uff0c\u7531\u4e8e\u6211\u4eec\u4e4b\u524d\u4e3a\u53f6\u7ed3\u70b9\u521b\u5efa\u4e86suffix link\uff0c\u66f4\u65b0active node\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4f9d\u7136\u4e3aO(1)\u3002 \u6700\u7ec8\u7ed3\u679c\u5982\u56fe\uff1a \u4e0b\u9762\u7ed9\u51fa\u7a0b\u5e8f\u7684\u4f2a\u4ee3\u7801\uff1a for char in text : remainder ++ while remainder > 0 : canonize // make sure the active_length is no longer than active_edge if active_length is 0 edge = get edge whose label starts with char from active node if edge is none : insert a edge whose label starts with char insert index to the leaf node of the edge update suffix link else: update active point break else: if active_edge [ active_length ] == char : update active point if char is the last char : add index to all the remainder suffix break else: split current active_edge at active_length with an internal node insert an new edge starts with char at the internal node insert index to the leaf node of the new edge update suffix link update active point \u641c\u7d22 \u641c\u7d22\u4e0e\u666e\u901a\u7684\u540e\u7f00\u6811\u641c\u7d22\u7c7b\u4f3c\uff0c\u6839\u636e\u8981\u641c\u7d22\u7684\u5b57\u7b26\u4e32\u5728\u6811\u4e2d\u4f9d\u6b21\u5339\u914d\u5373\u53ef\u3002 \u5f53\u6a21\u5f0f\u6700\u7ec8\u5339\u914d\u5230\u67d0\u4e00\u6761\u8fb9\u540e\uff0c\u540e\u5230\u8fd9\u6761\u8fb9\u7684\u76ee\u6807\u7ed3\u70b9\uff0c\u5219\u4ee5\u8fd9\u4e2a\u7ed3\u70b9\u4e3a\u6839\u7ed3\u70b9\u7684\u5b50\u6811\u4e2d\u7684\u6240\u6709\u7d22\u5f15\u5c31\u662f\u6b64\u6b21\u7684\u641c\u7d22\u7ed3\u679c\u3002 \u518d\u6839\u636e\u7d22\u5f15\u53ef\u5f97\u5230\u539f\u6765\u7684\u5b57\u7b26\u4e32\u3002 \u4f8b\u5982\u5728\u540e\u7f00\u6811 \u4e2d\u67e5\u627e'b'\u65f6\uff0c\u53ef\u627e\u5230\u7d22\u5f150\uff0c1\uff0c\u518d\u6839\u636e\u7d22\u5f15\u627e\u5230\u539f\u6765\u7684\u5b57\u7b26\u4e32\u3002 \u590d\u6742\u5ea6 \u65f6\u95f4 \u7531\u4e8e\u6784\u9020\u540e\u7f00\u6811\u548c\u641c\u7d22\u7684\u539f\u7406\u4e0e\u4e4b\u524d\u7684\u4e00\u6837\uff0c \u5047\u5b9a\u6240\u6709\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e4b\u548c\u4e3an\uff0c\u5219\u6784\u9020\u540e\u7f00\u6811\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(nlogn)\u3002 \u6a21\u5f0fP\u7684\u957f\u5ea6\u4e3a|P|\uff0c\u5219\u641c\u7d22\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(|P|) \u7a7a\u95f4 TODO \u7b14\u8005\u7ed9\u51fa\u4e86\u4e00\u4e2apython\u7248\u672c\u7684\u5b9e\u73b0\u3002 if (!document.getElementById('mathjaxscript_pelican')) { var s = document.createElement('script'); s.id = 'mathjaxscript_pelican'; s.type = 'text/javascript'; s.src = 'https:' == document.location.protocol ? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js' : 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; s[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(s); }","tags":"misc","loc":"http://zhangliyong.github.io/posts/2014/02/03/generalized-suffix-tree.html","title":"Generalized Suffix Tree"},{"text":"http://lucumr.pocoo.org/2007/5/21/getting-started-with-wsgi/ http://webpython.codepoint.net/wsgi_request_parsing_post http://blog.pythonisito.com/2012/08/building-web-applications-with-gevents.html","tags":"misc","loc":"http://zhangliyong.github.io/posts/2014/02/03/wsgi.html","title":"wsgi"},{"text":"You will be newbie forever. Get good at the beginner mode, learning new programs, asking dumb questions, making stupid mistakes, soliciting help, and helping others with what you learn (the best way to learn yourself). From: http://benoithamelin.tumblr.com/post/17949523929/you-will-be-newbie-forever-get-good-at-the","tags":"misc","loc":"http://zhangliyong.github.io/posts/2014/02/03/be-newbie-forever.html","title":"Be Newbie Forever"},{"text":"Python Python Guide: http://docs.python-guide.org/en/latest/index.html \u5b57\u7b26\u4e32\u5339\u914d\u7684KMP\u7b97\u6cd5: http://www.ruanyifeng.com/blog/2013/05/Knuth%E2%80%93Morris%E2%80%93Pratt_algorithm.html","tags":"misc","loc":"http://zhangliyong.github.io/posts/2014/01/24/read-later.html","title":"Read Later"},{"text":"Basic \u4f7f\u7528Git\u524d\uff0c\u8981\u5148\u7406\u89e3\u4e09\u4e2a\u6982\u5ff5\uff08\u4e0e\u5176\u5b83\u7684VCS\u4e0d\u540c\uff09\uff1aworking directory, index, repository. working directory \u5373\u662f\u4f60\u5f53\u524d\u7684\u5de5\u4f5c\u76ee\u5f55\uff0c\u4f60\u6240\u7f16\u8f91\u7684\u6587\u4ef6\u90fd\u5728\u6b64\u76ee\u5f55\u4e0b\u3002 index git add Git Flow http://danielkummer.github.com/git-flow-cheatsheet/ Git submodules http://git-scm.com/docs/gitignore http://git-scm.com/docs/git-check-ignore.html","tags":"misc","loc":"http://zhangliyong.github.io/posts/2014/01/09/git.html","title":"Git"},{"text":"/etc/sysconfig/iptables - The system scripts that activate the firewall by reading this file. sudo vi / etc / iptables . up . rule sudo iptables - restore < / etc / iptables . up . rule Ref: http://www.cyberciti.biz/faq/rhel-fedorta-linux-iptables-firewall-configuration-tutorial/","tags":"misc","loc":"http://zhangliyong.github.io/posts/2014/01/01/iptables.html","title":"iptables"},{"text":"\u5f53\u5728\u7ec8\u7aef\u4e0b\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\uff0c\u63d0\u793a\u7f16\u7801\u95ee\u9898\u65f6\uff0c\u57fa\u672c\u662f\u56e0\u4e3a\u7ec8\u7aef\u7684locale\u73af\u5883\u7684\u7f16\u7801\u4e0d\u652f\u6301\u3002 \u6709\u4e9b\u7ec8\u7aef\u4e0b\u9ed8\u8ba4\u7684LC_*\u8bbe\u7f6e\u4e3a C \uff0c\u53ef\u8fd0\u884c locale \u67e5\u770b\uff0c\u4e5f\u53ef\u67e5\u770b /etc/default/locale \uff0c \u6b64\u65f6\u7ec8\u7aef\u73af\u5883\u7684\u9ed8\u8ba4\u7f16\u7801\u662f ASCII \u3002 \u53ef\u5c06\u5176\u6539\u4e3a UTF8 \u7f16\u7801\u3002 \u4fee\u6539\u65b9\u5f0f\u5982\u4e0b\uff1a \u7528 locale -a \u547d\u4ee4\u67e5\u770b\u7cfb\u7edf\u652f\u6301\u7684category\u3002 \u5728\u7ec8\u7aef\u4e0b\u8fdb\u884c export LANG=<category> \uff0c\u6b64\u65f6\u7ec8\u7aef\u7684 LC_* \u53d8\u91cf\u53d1\u751f\u4e86\u53d8\u5316\u3002 \u5982\u679c\u4e0d\u60f3\u6bcf\u6b21\u624b\u52a8\u8bbe\u7f6e\uff0c\u53ef\u5c06 export LANG=<category> \u52a0\u5230 .bashrc \u4e2d\u3002 \u5982\uff1a echo \"export LANG=en_US.UTF-8\" >> . bashrc","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/12/22/locale.html","title":"locale"},{"text":"Pool \u4ec0\u4e48\u65f6\u5019\u6267\u884cPool\u4e2d\u7684\u4efb\u52a1 \u7528gevent spawn\u7684greenlet\u4f55\u65f6\u6267\u884c\uff0c\u65e0\u8bba\u662f\u7528group, pool, gevent, \u5f53spawn\u65f6\uff0c\u65b0spawn\u7684greenlet\u5df2\u7ecf\u5904\u7406\u51c6\u5907\u6267\u884c\u72b6\u6001\uff0c \u5f53\u4e3b\u8fdb\u7a0b\u6216\u5176\u5b83greenlet sleep\u6216\u6709\u5176\u5b83switch\u64cd\u4f5c\u65f6\uff0c\u65b0spawn\u7684greenlet\u4f1a\u88ab\u6267\u884c\u3002 ref: Introduction to Gevent: http://blog.pythonisito.com/2012/07/introduction-to-gevent.html Gevent, Threads, and Benchmarks: http://blog.pythonisito.com/2012/07/gevent-threads-and-benchmarks.html Gevent and Greenlets: http://blog.pythonisito.com/2012/07/gevent-and-greenlets.html Greening the Python Standard Library with Gevent: http://blog.pythonisito.com/2012/08/gevent-monkey-patch.html Building TCP Servers with Gevent: http://blog.pythonisito.com/2012/08/building-tcp-servers-with-gevent.html Building Web Applications with Gevent's WSGI Server: http://blog.pythonisito.com/2012/08/building-web-applications-with-gevents.html","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/12/04/gevent.html","title":"gevent"},{"text":"2013-05-08 TODO TODAY \u8543\u8304\u5de5\u4f5c\u6cd5\u505a\u7b14\u8bb0\uff08\u601d\u7ef4\u5bfc\u56fe\uff09 \u603b\u7ed3peclian mysql replication, mysql \u7d22\u5f15\u6811","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/08/21/todo.html","title":"TODO"},{"text":"emacs with zsh when I first open zsh in emacs using: M - x term It always print strange characters like \"4m\", that's because I don't have eterm-color terminfo, I solve this problem by running: # If you use Cocoa Emacs or Carbon Emacs tic - o ~/ . terminfo / Applications / Emacs . app / Contents / Resources / etc / e / eterm - color . ti in terminal. ref: http://stackoverflow.com/questions/8918910/weird-character-zsh-in-emacs-terminal","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/08/20/problems-i-encouter-with-emacs.html","title":"Problems I encouter with emacs"},{"text":"gevent: arrow: Better dates & times for Python https://github.com/crsmithdev/arrow http://crsmithdev.com/arrow requests: grequests: undead: https://github.com/waawal/undead legit envoy tablib clint autoenv","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/08/12/the-python-packages-i-love.html","title":"The python packages I love"},{"text":"\u6700\u8fd1\u8981\u5199\u4e00\u4e2amongo current op\u7684\u7ba1\u7406\u5de5\u5177\uff0c http://www.nicosphere.net/urwid-for-python-a-ncurses-library-2541/ https://github.com/intnull/videotop/blob/master/videotop.py Why can't I select text in an Urwid program? By default Urwid's MainLoop tells the terminal that it will handle mouse input so it can react to things like selecting widgets with the mouse or activating check boxes. If you wrote this program and you want to disable Urwid's mouse handling you can set handle_mouse=False when creating your MainLoop or screen object. Or you can just hold the SHIFT key while clicking and dragging in to get the normal select text/copy behavior.","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/08/09/urwid.html","title":"urwid"},{"text":"\u6700\u8fd1\u5728\u8c03mongodb\u7684\u6027\u80fd\uff0c\u53d1\u73b0currentop\u4e2d\u6709\u5f88\u591a\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u67e5\u8be2\uff0c\u4ececurrentop\u4e2d\u53ef\u4ee5\u770b\u5230\u67e5\u8be2\u6765\u6e90ip:port\u3002 \u90a3\u4e48\u53ef\u4ee5\u5230ip\u673a\u5668\u4e0a\u67e5\u8be2port\u5bf9\u5e94\u7684\u8fdb\u7a0b\u53f7\uff0c\u8fdb\u800c\u627e\u5230\u53d1\u51fa\u6b64\u67e5\u8be2\u7684\u5e94\u7528\u3002 \u6839\u636eport\u6765\u67e5\u8be2\u8fdb\u7a0b\u53f7\u6709\u591a\u79cd\u65b9\u6848\uff1a netstat\uff0c sudo netstat -anp | grep <port> \u5173\u4e8enetstat\u7684\u4f7f\u7528\u53c2\u8003\uff1ahttp://www.thegeekstuff.com/2010/03/netstat-command-examples/ fuser\uff0c\u627e\u5230\u4f7f\u7528tcp 7000\u7aef\u53e3\u53f7\u7684\u8fdb\u7a0b\uff1a sudo fuser 7000/tcp lsof lsof - i : portNumber lsof - i tcp : portNumber lsof - i udp : portNumber lsof - i : 80 \u901a\u8fc7\u8fd9\u51e0\u79cd\u65b9\u5f0f\u627e\u5230\u8fdb\u7a0b\u53f7\u540e\uff0c\u53ef\u4ee5\u5229\u7528 ps -eaf | grep <pid> \u627e\u5230\u6b64\u8fdb\u7a0b\u7684\u6267\u884c\u547d\u4ee4\uff0c \u5e76\u53ef\u4ee5\u901a\u8fc7 /proc/<pid>/cwd \u627e\u5230\u6b64\u8fdb\u7a0b\u7684\u6267\u884c\u76ee\u5f55\u3002 \u53c2\u8003\uff1ahttp://www.cyberciti.biz/faq/what-process-has-open-linux-port/","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/08/09/find-out-which-process-open-a-linux-port.html","title":"Find out which process open a linux port"},{"text":"https://pypi.python.org/pypi/pudb","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/08/06/pudb.html","title":"PuDB"},{"text":"\u5f53\u4fee\u6539\u67d0\u4e00node\u7684\u4e3b\u673a\u540d\u65f6\uff0c\u4fee\u6539\u540e\u6b64node\u7684\u6240\u6709\u5386\u53f2\u8bb0\u5f55\u90fd\u4f1a\u6d88\u5931\uff0c\u53ef\u4ee5\u6062\u590d\u8fd9\u4e9b\u5386\u53f2\u6570\u636e\uff0c\u5728munin\u4e2d\u6240\u6709\u6570\u636e\u90fd\u4fdd\u5b58\u5728rrd\u6587\u4ef6\u4e2d\uff0c\u6b64\u6587\u4ef6\u5728/var/lib/munin\u4e2d\uff0c\u5982\uff1asocial/services.social-uptime-uptime-g.rrd \u662f\u4e3b\u673a\u540d\u4e3aservices.social\u7684\u5176\u4e2d\u4e00\u4e2a\u6570\u636e\u6587\u4ef6\u3002\u5f53\u4fee\u6539\u4e86node\u7684\u4e3b\u673a\u540d\u65f6\uff0c\u53ea\u9700\u8981\u540c\u65f6\u5bf9\u6570\u636e\u6587\u4ef6\u91cd\u547d\u540d\u5373\u53ef\u3002 \u53d6\u6d88munin crontab\u7684\u6267\u884c\uff0c cd /etc/cron.d/; sudo mv munin munin.disable crontab\u4e0d\u4f1a\u6267\u884c/etc/cron.d/\u4e0b\u6587\u4ef6\u540d\u4e2d\u5e26\u6709\".\"\u7684\u6587\u4ef6 \u751f\u547d\u540d\u6570\u636e\u6587\u4ef6 \u4fee\u6539munin\u914d\u7f6e/etc/munin/munin.conf\u4e2d\u7684node\u4e3b\u673a\u540d \u4fee\u6539munin crontab\u6267\u884c\uff0c5\u5206\u949f\u540e\u5c06\u4f1a\u770b\u5230\u66f4\u65b0\u7684\u7ed3\u679c\u3002 NOTE \uff1a \u6539\u52a8\u6570\u636e\u6587\u4ef6\u524d\u8981\u5148\u53d6\u6d88crontab\u7684\u6267\u884c\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u5f71\u54cd\u5386\u53f2\u6570\u636e, \u540c\u65f6\u6570\u636e\u6587\u4ef6\u8fc1\u79fb\u4e4b\u540e\uff0c\u8981\u4fdd\u8bc1\u7528\u6237munin\u6709\u5bf9\u8fd9\u4e9brrd\u6587\u4ef6\u5199\u7684\u6743\u9650\u3002\u56e0\u4e3a\u7528 sudo cp \u4e4b\u540e\u4f1a\u6539\u53d8\u8fd9\u4e9b\u6587\u4ef6\u7684owner. \u5982\u679c\u8981\u5c06munin server\u8f6c\u79fb\u5230\u5176\u5b83\u673a\u5668\uff0c\u53ea\u9700\u8981\u5c06rrd\u6570\u636e\u6587\u4ef6\u590d\u5236\u8fc7\u53bb\u5373\u53ef\u3002","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/08/05/transfer-munin-server.html","title":"transfer munin server"},{"text":"Writing plugins global attribute: http://munin-monitoring.org/wiki/protocol-config redis munin \u6709\u6539\u52a8\uff0c\u603b\u662f\u8bf4Redis\u627e\u4e0d\u5230\uff0c\u4e00\u4f1a\u513f\u4e00\u4e0b\u95ee\u9898\uff0c\u505a\u4e00\u4e2apatch mulitgraph: http://munin-monitoring.org/wiki/protocol-multigraph fw_conntract fw_forwarded_local timeout \u914d\u7f6e\u597dmunin\u4e4b\u540e\uff0cfw_conntrack\u603b\u662f\u62a5\u8b66\uff0c\u8bfb\u4e0d\u5230\u6570\u636e\uff0c\u4e3b\u8981\u539f\u56e0\u662f\u6267\u884cfw_conntrack\u8d85\u65f6\uff0cmunin plugin\u7684\u9ed8\u8ba4\u8d85\u65f6\u65f6\u95f4\u662f10s\uff0c\u8d85\u65f6\u4e3b\u8981\u662f\u56e0\u4e3a cat /proc/net/ip_conntrack \uff0c\u5bf9\u4e8e\u7f51\u7edc\u8bf7\u6c42\u5c11\u7684\u670d\u52a1\u5668\uff0c\u6b64\u8bed\u53e5\u4f1a\u5f88\u5feb\u6267\u884c\u5b8c\uff0c\u4f46\u5bf9\u4e8e\u7f51\u7edc\u8bf7\u6c42\u6bd4\u8f83\u591a\u7684\u670d\u52a1\u5668\uff0c\u6b64\u8bed\u53e5\u8017\u65f6\u53ef\u80fd\u8981\u8d85\u8fc730s\u3002 Google\u7684\u76f8\u5e94\u95ee\u9898\uff0c\u6b64\u95ee\u9898\u65e9\u5df2\u88ab\u4eba\u89e3\u51b3\uff0c\u89e3\u51b3\u65b9\u6848\u89c1\u5982\u4e0b\u94fe\u63a5\uff1a http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=565565 \u4e3b\u8981\u5c31\u662f\u7528 conntrack -L \u4ee3\u66ff cat /proc/net/ip_conntrack \uff0c\u8981\u5148\u5b89\u88c5 sudo apt-get install conntrack limits limit \u7528\u4e8e\u68c0\u67e5\u6bcf\u4e2aplugin\u7684field\u7684\u503c\u662f\u5426\u8d85\u51fa\u8bbe\u5b9a\u7684warning\u548ccritical\uff0c\u5e76\u505a\u51fa\u76f8\u5e94\u7684\u8b66\u62a5\u3002 warning\u548ccritical\u662f\u8fd0\u884c\u63d2\u4ef6config\u8f93\u51fa\u7684\u6bcf\u4e2afiled\u7684warning\u548ccritical\u6765\u8bbe\u7f6e\u7684\u3002 \u6709\u65f6\u6211\u4eec\u5728 /etc/munin/plugin-conf.d/ \u4e2d\u4f1a\u770b\u5230 env.warning value \uff0c\u8fd9\u662f\u56e0\u4e3a\u63d2\u4ef6\u4f1a\u8bfb\u53d6 env.warning \u7684\u503c\uff0c\u5e76\u6839\u636e\u6b64\u503c\u8bbe\u7f6e\u6bcf\u4e2afield\u7684warning\u3002\u5982\u679c\u63d2\u4ef6\u4e0d\u8bfb\u53d6 env.warning \u7684\u503c\uff0c\u5373\u4f7f\u8bbe\u7f6e\u4e5f\u4e0d\u4f1a\u542f\u4f5c\u7528\uff0cmunin\u4e0d\u4f1a\u81ea\u52a8\u8bbe\u7f6e\u3002 \u5173\u4e8ewarning, critical\u7684\u8bbe\u7f6e\u53ef\u53c2\u8003: {fieldname}.warning , {fieldname}.critical} http://munin-monitoring.org/wiki/protocol-config http://munin-monitoring.org/wiki/munin-man#munin-html","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/08/05/munin.html","title":"munin"},{"text":"\u4e0b\u9762\u4ecb\u7ecdpython\u4e0b\u7684\u4e00\u4e2a\u7528\u4e8e\u9879\u76ee\u90e8\u7f72\u7684\u5de5\u5177 fabric \uff0c\u8981\u5b66\u4e60fabric\u63a8\u8350\u9605\u8bfb\u5176\u5b98\u65b9\u6587\u6863\uff0c \u672c\u6587\u7ed9\u53ea\u7ed9\u51fa\u4e00\u4e2a\u7b80\u5355\u7684\u4ecb\u7ecd\u53ca\u4e00\u4e9b\u57fa\u672c\u7684\u529f\u80fd\u3002 \u6839\u636e\u5b98\u65b9\u6587\u6863\u7684\u4ecb\u7ecd: Fabric is: A tool that lets you execute arbitrary Python functions via the command line; A library of subroutines (built on top of a lower-level library) to make executing shell commands over SSH easy and Pythonic. \u9996\u5148\u5b89\u88c5fabric pip install fabric \uff0c\u5b89\u88c5\u5b8cfabric\u4e4b\u540e\uff0c\u7cfb\u7edf\u4f1a\u591a\u51fafab\u547d\u4ee4\u3002 fab\u547d\u4ee4\u5728\u6267\u884c\u65f6\u4f1a\u8bfb\u53d6\u5f53\u524d\u76ee\u5f55\u4e0b\u7684fabfile.py\u6587\u4ef6\uff0c\u5e76\u6839\u636efabric\u7684\u53c2\u6570\u6765\u6267\u884c\u6587\u4ef6\u4e2d\u7684\u51fd\u6570\u3002 fabfile.py def hello () : print ( \"Hello world!\" ) hello\u4e3a\u4e00\u4e2atask\uff0c\u6267\u884chello\u5982\u4e0b\uff1a $ fab hello Hello world ! Done . \u6211\u4eec\u770b\u5230hello\u5e76\u6ca1\u6709\u53c2\u6570\uff0cfab\u4e5f\u652f\u6301\u7ed9task\u52a0\u53c2\u6570\u3002 fab\u53ef\u4ee5\u7528\u4e8e\u9879\u76ee\u90e8\u7f72\uff0c\u670d\u52a1\u5668\u7ba1\u7406\u3002\u5b83\u53ef\u4ee5\u901a\u8fc7ssh\u6267\u884c\u670d\u52a1\u5668\u4e0a\u7684shell\u547d\u4ee4\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u6267\u884c\u672c\u5730\u7684shell\u547d\u4ee4\u3002 \u4f8b\u5982\uff1a local\u6267\u884c\u672c\u5730\u547d\u4ee4\uff0crun\u6267\u884c\u670d\u52a1\u5668\u7aef\u547d\u4ee4\uff0csudo\u4ee5root\u6743\u9650\u6267\u884c\u670d\u52a1\u5668\u7aef\u547d\u4ee4\u3002 fab\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6eenv.hosts\u53d8\u91cf\u6765\u5728\u6240\u6709host\u4e2d\u6267\u884c\u67d0\u4e00task\u3002 fab\u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e9bdecorator\uff0c\u5982hosts, roles\u6765\u8bbe\u7f6e\u5728\u67d0\u4e9bhost\u4e0a\u6267\u884ctask\u3002","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/07/31/fabric.html","title":"fabric"},{"text":"\u7f51\u7edc\u4e0a\u7ecf\u5e38\u6709\u6587\u7ae0\u8bf4mongo\u4f1a\u9700\u8981\u5927\u91cf\u5185\u5b58\uff0c\u90a3\u4e48mongo\u5230\u4f4e\u9700\u8981\u591a\u5c11\u5185\u5b58\u3002 MongoDB\u5b9e\u9645\u9700\u8981\u7684\u5185\u5b58\u5927\u5c0f\u53d6\u51b3\u4e8eworking set\u7684\u5927\u5c0f\uff0cworking set\u662fmongo\u5b8c\u6210\u64cd\u4f5c\u6240\u9700\u8981\u7684\u6240\u6709\u6587\u6863\u53ca\u7d22\u5f15\u3002\u5bf9\u4e8e\u4e00\u4e2acollection\u800c\u8a00\uff0c\u5982\u679c\u4e0d\u9700\u8981\u8bbf\u95ee\u6bcf\u4e00\u6761\u8bb0\u5f55\uff0c\u4e0d\u9700\u8981\u6240\u6709\u7684\u8bb0\u5f55\u90fd\u5728\u5185\u5b58\u4e2d\u3002working set\u6700\u597d\u90fd\u5728\u5185\u5b58\u4e2d\uff0c\u4ee5\u4fdd\u8bc1\u597d\u7684\u6027\u80fd\uff0c\u5982\u679c\u4e0d\u90fd\u5728\u5185\u5b58\u4e2d\u4f1a\u51fa\u73b0\u6bd4\u8f83\u591a\u7684page fault\u3002 \u67e5\u770bworking set\u5927\u5c0f\u53ef\u7528\u5982\u4e0b\u547d\u4ee4\uff1a db.runCommand( { serverStatus: 1, workingSet: 1 } ) serverStatus.mem.resident The value of resident is roughly equivalent to the amount of RAM, in megabytes (MB), currently used by the database process. In normal use this value tends to grow. In dedicated database servers this number tends to approach the total amount of system memory. \u6240\u4ee5\u5982\u679cresident\u6ca1\u6709\u8d85\u51fa\u603b\u7684\u5185\u5b58\u5927\u5c0f\uff0c\u6b64\u65f6\u5185\u5b58\u662f\u8db3\u591f\u7684\uff0c\u5f53\u7136\u4e5f\u8981\u770b\u4e00\u4e0bpage faults\u662f\u4e0d\u662f\u5f88\u9891\u7e41\u3002 Does MongoDB require a lot of RAM? Not necessarily. It's certainly possible to run MongoDB on a machine with a small amount of free RAM. MongoDB automatically uses all free memory on the machine as its cache. System resource monitors show that MongoDB uses a lot of memory, but its usage is dynamic. If another process suddenly needs half the server's RAM, MongoDB will yield cached memory to the other process. Technically, the operating system's virtual memory subsystem manages MongoDB's memory. This means that MongoDB will use as much free memory as it can, swapping to disk as needed. Deployments with enough memory to fit the application's working data set in RAM will achieve the best performance.","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/07/29/how-mongodb-use-memory.html","title":"How mongodb use memory"},{"text":"\u6700\u8fd1\u5728\u5206\u6790mongo\u7684\u6027\u80fd\u95ee\u9898\uff0c\u53d1\u73b0mongo\u6240\u5728\u673a\u5668\u7684io\u6bd4\u8f83\u9891\u7e41\u3002 \u4f7f\u7528vmstat\u547d\u4ee4\u67e5\u770b\uff0c\u53d1\u73b0b\uff08The number of processes in uninterruptible sleep\uff09\u8fd9\u4e00\u5217\u7684\u6570\u91cf\u6bd4\u8f83\u5927\uff0c\u6301\u7eed\u57284\u5de6\u53f3\u3002 \u968f\u540e\u67e5\u8be2uninterruptible sleep\u72b6\u6001\u7684\u610f\u4e49\uff0c\u5f15\u81ea\uff1ahttp://www.novell.com/support/kb/doc.php?id=7002725 Processes in a \"D\" or uninterruptible sleep state are usually waiting on I/O. The ps command shows a \"D\" on processes in an uninterruptible sleep state. The vmstat command also shows the current processes that are \"blocked\" or waiting on I/O. The vmstat and ps will not agree on the number of processes in a \"D\" state, so don't be too concerned. You cannot kill \"D\" state processes, even with SIGKILL or kill -9. As the name implies, they are uninterruptible. You can only clear them by rebooting the server or waiting for the I/O to respond. It is normal to see processes in a \"D\" state when the server performs I/O intensive operations. If performance becomes an issue, you may need to check the health of your disks. Make sure your firmware and kernel disk drivers are updated. In the example above, there is heavy disk activity shown in the \"io\" columns and the server is currently swapping to disk. The example more likely represents a memory issue, rather than a disk I/O issue. There are two ways to find more about the processes in D state. ps -eo ppid,pid,user,stat,pcpu,comm,wchan:32 This prints a list of all processes where in the last column either a '-' is displayed when the process is running or the name of the kernel function in which the process is sleeping if the process is currently sleeping. This includes also processes which are interruptible. Processes that are in uninterruptible sleep can be determined via the fourth column which would then show a D. echo w > /proc/sysrq-trigger This command produces a report and a list of all processes in D state and a full kernel stack trace to /var/log/messages. This shows much more information than the first option described above. \u5173\u4e8evmstat\u7684\u4f7f\u7528\u53c2\u8003\uff1ahttp://www.linuxintheshell.org/2013/05/22/episode-030-vmstat/","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/07/25/vmstat.html","title":"vmstat"},{"text":"\u6700\u8fd1mongo\u7684\u6027\u80fd","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/07/25/mongo-performance.html","title":"Mongo Performance"},{"text":"query after update slow \u8fd9\u4e24\u5929\u6709\u4e00\u4e2a\u63a5\u53e3\u7684\u901f\u5ea6\u975e\u5e38\u6162\uff0c\u4e3b\u8981\u662f\u6267\u884c\u4e00\u6761\u67e5\u8be2\u8bed\u53e5\u975e\u5e38\u6162\uff0c\u6709\u65f6\u8017\u65f6\u8fbe200\u79d2\uff0c\u4e8e\u662f\u627e\u5230\u4e86\u8fd9\u6761\u67e5\u8be2\u8bed\u53e5\u5355\u72ec\u5728mongo shell\u4e2d\u6267\u884c\uff0c\u5728mongo shell\u4e2d\u6267\u884c\u5e76\u4e0d\u6162\uff0c\u6162\u6162\u8c03\u8bd5\u540e\u6700\u7ec8\u627e\u5230\u95ee\u9898\uff0c\u539f\u56e0\u662f\u5728\u67e5\u8be2\u8bed\u53e5\u6267\u884c\u4e4b\u524d\u6267\u884c\u4e86\u4e24\u6b21\u66f4\u65b0\u8bed\u53e5\u3002 \u5229\u7528pymongo\u6267\u884c\u66f4\u65b0\u65f6\uff0c\u5982\u679c\u4e0d\u8bbe\u7f6esafe=True\uff0cmongo\u4f1a\u53ca\u65f6\u8fd4\u56de\u51fd\u6570\u8c03\u7528\uff0c\u4f46\u66f4\u65b0\u5e76\u6ca1\u6709\u771f\u6b63\u6267\u884c\u5b8c\uff0cmongo\u8fdb\u7a0b\u5728\u540e\u53f0\u7ee7\u7eed\u6267\u884c\uff0c\u6240\u4ee5\u5f53\u63a5\u7740\u6267\u884c\u67e5\u8be2\u65f6\uff0c\u6b64\u65f6\u66f4\u65b0\u6ca1\u6709\u7ed3\u675f\uff0c\u6570\u636e\u5e93\u4f1a\u5904\u4e8elock\u72b6\u6001\uff0c\u67e5\u8be2\u7b49\u5f85\u6570\u636e\u5e93\u89e3\u9501\uff0c\u6240\u4ee5\u67e5\u8be2\u975e\u5e38\u6162\u3002 \u628a\u66f4\u65b0\u8bed\u53e5\u53bb\u9664\u540e\uff0c\u67e5\u8be2\u6062\u590d\u6b63\u5e38\u3002 Concurrency MongoDB global lock to ga Tips If Write Heavy Global Lock is Global As you probably know, MongoDB has a global lock. The longer your writes take, the higher your lock percentage is. Updating documents that are in RAM is super fast. Updating documents that have been pushed to disk, first have to be read from disk, stored in memory, updated, then written back to disk. This operation is slow and happens while inside the lock. Updating a lot of random documents that rarely get updated and have been pushed out of RAM can lead to slow writes and a high lock percentage. More Reads Make For Faster Writes The trick to lowering your lock percentage and thus having faster updates is to query the document you are going to update, before you perform the update. Querying before doing an upsert might seem counter intuitive at first glance, but it makes sense when you think about it. The read ensures that whatever document you are going to update is in RAM. This means the update, which will happen immediately after the read, always updates the document in RAM, which is super fast. I think of it as warming the database for the document you are about to update. http://www.mongotips.com/b/lower-lock-and-number-of-slow-queries/","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/07/24/mongo.html","title":"Mongo"},{"text":"\u4eca\u5929\u8bfb\u4e86A. Jesse Jiryu Davis\u7684\u4e00\u7bc7 \u6587\u7ae0 \uff0c\u5173\u4e8e\u8ba1\u7b97\u673a\u4e13\u4e1a\u7684\u5b66\u751f\u5982\u4f55\u8ba9\u81ea\u5df1\u7a81\u51fa\uff0c\u627e\u5230 \u81ea\u5df1\u559c\u6b22\u7684\u5de5\u4f5c\u3002 \u5f00\u7bc7\u4f5c\u8005\u5c31\u6307\u51fa\u8981\u60f3\u529e\u6cd5\u8ba9\u81ea\u5df1\u7a81\u51fa\uff0c\u4e0d\u8981\u4e0e\u5176\u4ed6\u5b66\u751f\u90fd\u4e00\u6837\uff0c\u5982\u679c\u4f60\u662f\u4e00\u4e2a\u9ed1\u5ba2\uff0c\u90a3\u4f60\u5c31\u8981\u8868\u73b0\u51fa\u6765\u3002 \u4ec5\u4ec5\u5b66\u6821\u8bfe\u5802\u5b66\u7684\u4e1c\u897f\u662f\u4e0d\u591f\u7684 \u8981\u6709\u6c14\u8d28\u3001\u9b45\u529b\u3002 \u597d\u50cf\u8ba1\u7b97\u673a\u4e13\u4e1a\u7684\u5b66\u751f\u4e0d\u9700\u8981\uff0c\u9519\u4e86\uff01\u7a0b\u5e8f\u5458\u4e5f\u8981\u548c\u4eba\u4ea4\u6d41\uff0c\u6253\u4ea4\u9053\uff0c\u5c24\u5176\u662f\u56e2\u961f\u4e4b\u95f4\uff0c\u5982\u679c\u4f60\u6709\u9b45\u529b\uff0c\u4f1a\u66f4\u5bb9\u6613\u548c\u4eba\u4ea4\u6d41\uff0c\u6c9f\u901a\u6548\u7387\u66f4\u9ad8\u3002\u5f88\u591a\u7a0b\u5e8f\u5458\u4e5f\u8bb8\u90fd\u77e5\u9053\u6c9f\u901a\u7684\u91cd\u8981\u6027\uff0c\u5634\u4e0a\u786e\u8bf4\u4e0d\u9700\u8981\uff0c\u5176\u5b9e\u662f\u5728\u7ed9\u81ea\u5df1\u627e\u501f\u53e3\u3002 \u72ec\u7acb\u7684\u9879\u76ee\uff0c\u4e0d\u4e00\u6837\u7684\u8bed\u8a00\uff0c\u4e0d\u4e00\u6837\u7684\u8bfe\u7a0b \u5982\u679c\u6709\u521b\u610f\u60f3\u6cd5\uff0c\u5c31\u5b9e\u73b0\u5b83\uff0c\u8fd9\u5c06\u4f1a\u7ed9\u4f60\u589e\u52a0\u5f88\u591a\u7684\u5206\u6570\uff0c \u5b66\u4e00\u95e8\u5176\u5b83\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u4e0d\u8981\u53ea\u5c40\u9650\u4e8e\u8bfe\u5802\u4e0a\u6559\u7684\u3002 \u4ece\u957f\u8fdc\u6765\u770b\uff0c\u6700\u597d\u53c2\u4e0e\u4e00\u4e9b\u5f00\u6e90\u9879\u76ee\uff0c\u4e00\u5f00\u59cb\u53ef\u80fd\u5f88\u96be\u627e\u5230\u5f00\u6e90\u9879\u76ee\u7684\u4e00\u4e9b\u95ee\u9898\uff0c\u5373\u4f7f\u627e\u5230\u4e86\uff0c\u53ef\u80fd\u4e5f\u5199\u4e0d\u51fa\u9ad8\u8d28\u91cf\u7684patch\uff0c\u53ef\u4ee5\u5148\u81ea\u5df1\u5efa\u7acb\u4e00\u4e2a\u9879\u76ee\uff0c\u81ea\u5df1\u5f00\u53d1\u3002 \u5f53\u7136\u4e5f\u6709\u4f8b\u5916\uff1a\u4f60\u53ef\u4ee5\u4fee\u6539\u4e00\u4e9bpython\u7684\u5e93\uff0c\u4f7f\u5176\u517c\u5bb9python 3\uff1b\u6216\u8005\u5c06\u4e00\u79cd\u8bed\u8a00\u4e0a\u70ed\u95e8\u7684\u5e93\u79fb\u690d\u5230\u53e6\u4e00\u79cd\u8bed\u8a00\u4e0a(\u5728\u53e6\u4e00\u79cd\u8bed\u8a00\u4e0a\u91cd\u65b0\u5b9e\u73b0)\uff0c\u5982\u679c\u8fd9\u4e2a\u8bed\u8a00\u4e0a\u8fd8\u6ca1\u6709\u76f8\u5e94\u7684\u5e93\u3002 \u5bf9\u4e8e\u6211\u4eec\u5728\u804c\u7684\u7a0b\u5e8f\u5458\uff0c\u8fd9\u4e9b\u5efa\u8bae\u4ecd\u7136\u9002\u7528\uff0c\u6211\u4eec\u4e00\u5b9a\u8981\u6709\u81ea\u5df1\u53ef\u62ff\u51fa\u7684\u4e1c\u897f\u6765\uff0c\u6709\u4e00\u4e9b\u81ea\u5df1\u7684\u9879\u76ee\uff0c\u80fd\u4e0e\u5f00\u6e90\u3002 \u975e\u5e38\u91cd\u8981\u7684\u4e00\u70b9\uff0c\u4e00\u5b9a\u8981\u6709\u6c14\u8d28\u3001\u9b45\u529b\uff0c\u5584\u4e8e\u548c\u53e6\u4eba\u4ea4\u6d41\uff0c\u675c\u7edd\u5c4c\u4e1d\u3002\u8fd8\u6709\u7a0b\u5e8f\u5458\u8981\u6ce8\u610f\u8eab\u4f53\u54e6\u3002","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/07/10/job.html","title":"Job"},{"text":"insert current date \"map F3 to insert current date nnoremap \"=strftime(\"%Y-%m-%d (%a)\") P inoremap =strftime(\"%Y-%m-%d (%a)\") http://vim.wikia.com/wiki/Insert_current_date_or_time http://vim.wikia.com/wiki/Mapping_keys_in_Vim_- Tutorial (Part_1) http://stackoverflow.com/questions/1218390/what-is-your-most-productive-shortcut-with-vim/1220118#1220118","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/06/25/datetime.html","title":"datetime"},{"text":"http://virtualthreads.blogspot.com/2006/02/understanding-memory-usage-on-linux.html http://www.cyberciti.biz/tips/howto-find-memory-used-by-program.html pmap vmmap on mac","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/06/19/mem.html","title":"mem"},{"text":"http://www.jeffknupp.com/blog/2012/03/31/pythons-hardest-problem/ http://stackoverflow.com/questions/731993/multiprocessing-or-multithreading http://stackoverflow.com/questions/3044580/multiprocessing-vs-threading-python http://eli.thegreenplace.net/2012/01/16/python-parallelizing-cpu-bound-tasks-with-multiprocessing/ http://stackoverflow.com/questions/1226584/multiprocess-or-threading-in-python","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/06/19/concurrency.html","title":"concurrency"},{"text":"Redis and MongoDB insertion performance analysis: http://blog.axant.it/archives/236 MongoDB and Redis: a different interpretation of what's wrong with Relational DBs: http://oldblog.antirez.com/post/MongoDB-and-Redis.html","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/06/04/redis-vs-mongodb.html","title":"Redis vs Mongodb"},{"text":"","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/05/19/memory.html","title":"Memory"},{"text":"\u5173\u4e8e\u7761\u7720\u4f60\u5e94\u8be5\u77e5\u9053\u7684\u5341\u4ef6\u4e8b \u5730\u5740\uff1ahttp://v.163.com/movie/2013/5/V/Q/M8TDTH9BJ_M8TE2FFVQ.html \u7f51\u6613\u5206\u5f00\u8bfe\u4e0a\u6709\u4e00\u671fbbc\u62cd\u6444\u7684\u5173\u4e8e\u7761\u7720\u7684\u8bb0\u5f55\u7247\uff0c\u91cc\u9762\u63d0\u5230\u4e86\u5f88\u591a\u5173\u4e8e\u63d0\u9ad8\u7761\u7720\u7684\u95ee\u9898\uff0c \u5bf9\u4e8e\u4e00\u4e9b\u81ea\u5df1\u611f\u89c9\u6709\u5e2e\u52a9\u7684\u8bb0\u5f55\u5982\u4e0b\uff1a \u5496\u5561\u548c\u6d12\u7cbe\u90fd\u4f1a\u5f71\u54cd\u4eba\u7684\u7761\u7720\uff1b\u5496\u5561\u4f1a\u8ba9\u4eba\u96be\u4ee5\u5165\u7761\uff0c\u9152\u7cbe\u4f1a\u5bb9\u6613\u8ba9\u4eba\u5165\u7761\uff0c\u4f46\u4f1a\u7f29\u6df1\u5ea6\u7761\u7720\u9636\u6bb5\u3002 \u5bf9\u4e8e\u7ecf\u5e38\u8de8\u65f6\u533a\u7684\u4eba\u6765\u8bf4\uff0c\u7761\u7720\u4e5f\u662f\u4e2a\u5927\u95ee\u9898\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u5c1d\u8bd516\u5c0f\u65f6\u4e0d\u5403\u996d\uff0c\u53ef\u4ee5\u559d\u6c34\uff0c\u5230\u8fbe\u76ee\u7684\u5730\u540e\uff0c\u5728\u5f53\u5730\u7684\u6b63\u5e38\u7528\u9910\u65f6\u95f4\u7528\u9910\uff0c\u6309\u7167\u5f53\u5730\u7684\u996e\u98df\u65f6\u95f4\u3002 \u7ecf\u5e38\u6027\u7684\u7d27\u5f20\u4e5f\u4f1a\u5f71\u54cd\u7761\u7720\uff0c\u5728\u7761\u89c9\u524d\u5728\u5e8a\u4e0a\u9002\u5f53\u505a\u4e00\u4e9b\u653e\u677e\u808c\u8089\u7684\u953b\u70bc\uff0c\u5148\u505a\u4e00\u4e9b\u52a8\u4f5c\u8ba9\u808c\u8089\u7d27\u5f20\u518d\u653e\u677e\u3002 \u996e\u98df\u4e5f\u4f1a\u5f71\u54cd\u7761\u89c9\uff0c\u5982\u679c\u591a\u98df\u542b\u86cb\u767d\u8d28\u5c11\u7684\u4e1c\u897f\u4f1a\u5f71\u54cd\u53d1\u56f0\uff0c\u591a\u98df\u86cb\u767d\u8d28\u591a\u7684\u4f1a\u8ba9\u4eba\u6e05\u9192\u3002 \u6c14\u5473\u4e5f\u80fd\u4fc3\u8fdb\u4eba\u7684\u7761\u7720\uff0c\u7761\u524d\u559d\u85b0\u8863\u8349\u6ce1\u7684\u8336\u53ca\u95fb\u85b0\u8863\u8349\u7684\u6c14\u5473\u4f1a\u6709\u5f97\u7761\u7720\u3002 \u7761\u89c9\u524d\u4e00\u5c0f\u65f6\u6ce1\u4e2a\u70ed\u6c34\u6fa1\u6709\u5229\u4e8e\u7761\u7720\u3002","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/05/19/sleeping.html","title":"Sleeping"},{"text":"Introduction Logbook\u662f\u7528\u6765\u53d6\u4ee3\u6807\u51c6\u5e93logging\u7684\u4e00\u4e2alog\u7cfb\u7edf\uff0c\u6839\u636e\u5b98\u65b9\u7684\u4ecb\u7ecd\u5b83\u8ba9\u8bb0log\u53d8\u7684\u6709\u8da3\uff0c logbook\u76ee\u524d\u8fd8\u5904\u4e8e\u5f00\u53d1\u9636\u6bb5\u3002\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9 core feature logbook\u4e0elogging\u5dee\u522b\u6bd4\u8f83\u5927\uff0clogbook\u548clogging\u57fa\u672c\u90fd\u662f\u7531\uff1alogger, handler, filter\u7b49\u7ec4\u4ef6\u7ec4\u6210\uff0c\u4f46\u662f\u5728logbook\u4e2d\u8fd9\u4e9b\u7ec4\u4ef6\u4e4b\u95f4\u7684\u5173\u7cfb\u53d1\u751f\u7684\u6839\u672c\u7684\u53d8\u5316\u3002\u5e76\u4e14logbook\u63d0\u4f9b \u4e86\u66f4\u591a\u7684\u7ec4\u4ef6\uff0c\u5982\uff1aprocessor\u3002 New Feature \u5728logbook\u4e2d\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u53d8\u5316\u662f\u5927\u91cf\u4f7f\u7528 stack , \u4e00\u5f00\u59cb\u91c7\u7528logging\u7684\u65b9\u5f0f\u53bb\u7406\u89e3logbook\uff0c\u53d1\u73b0\u5f88\u4e0d\u9002\u5e94\uff0c\u771f\u6b63\u53bb\u4e86\u89e3\u4e4b\u540e\uff0c\u53d1\u73b0\u8fd9\u79cd\u65b9\u5f0f\u6709\u975e\u5e38\u5f3a\u7684\u7075\u6d3b\u6027\uff0c \u53ef\u4ee5\u975e\u5e38\u7075\u6d3b\u7684\u7ec4\u7ec7handler\uff0c\u800c\u4e0d\u7528\u53bb\u5904\u7406handler\u4e0elogger\u7684\u6709\u5173\u7cfb\uff0c\u5c06logger\u4e0ehandler\u89e3\u8026\u5408\u3002 \u76ee\u524dlogbook\u4e2d\u5b58\u5728\u4e09\u79cdstack\uff0c\u5206\u522b\u7528\u6765\u5b58\u50a8Handler, Processor, Flag\u3002 \u6bcf\u4e00\u53e5log\u90fd\u4f1a\u7ecf\u8fc7\u8fd9\u4e09\u4e2astack\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u5904\u7406\u3002\u5047\u5982\u76ee\u524d\u5b58\u50a8handler\u7684stack\u4e2d\u76ee\u524d \u6709\u4e24\u4e2ahandler h1, h2: | h1 | | ____ | | h2 | | ____ | \u90a3\u6bcf\u4e00\u53e5log\u90fd\u4f1a\u88abh1\u5904\u7406\u5b8c\u540e\u88abh2\u518d\u5904\u7406\u3002 Handler, Processor, Flag\u5fc5\u987b\u52a0\u5230stack\u4e2d\u624d\u80fd\u542f\u5230\u4f5c\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528 push_application() \u53ca pop_application() \u3002 logbook\u4e2d\u4e5f\u63d0\u4f9b\u4e86 with \u6765\u5b8c\u6210\u5bf9stack\u7684push\u548cpop\u3002 logbook\u589e\u52a0\u4e86\u5f88\u591a\u7684handler\uff0c\u751a\u81f3\u90fd\u6709\u5c06log\u53d1\u5230twitter\u4e0a\u7684handler\u3002 logbook\u6709\u975e\u5e38\u591a\u7684\u7279\u6027\uff0c\u76f8\u4fe1\u4ee5\u540e\u4e5f\u4f1a\u589e\u52a0\u66f4\u591a\u6709\u8da3\u7684\u7279\u6027\uff0c\u5efa\u8bae\u9605\u8bfb\u5176\u5b98\u65b9\u6587\u6863\uff1ahttps://logbook.readthedocs.org/en/latest/ Examples \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e9b\u7b80\u5355\u7684\u4f7f\u7528\u793a\u4f8b\uff0c\u6709\u4e9b\u662f\u5b98\u65b9\u6587\u6863\u4e0a\u7ed9\u51fa\u7684\u3002 \u5f00\u59cb\u4f7f\u7528logbook\u53ef\u4ee5\u4e0d\u7528\u505a\u4efb\u4f55\u914d\u7f6e\uff1a from logbook import warn warn ( 'This is too cool for stdlib' ) [ 2013 - 05 - 18 14 : 29 ] WARNING : Generic : This is too cool for stdlib \u4e0a\u9762\u7684\u4ee3\u7801\u4f1a\u5c06log\u8bb0\u5f55\u5230stderr\u4e2d\u3002\u662f\u4e0d\u662f\u975e\u5e38\u7b80\u5355\uff0c\u90fd\u4e0d\u9700\u8981\u8bbe\u7f6ehandler\uff0clogbook\u6709\u975e\u5e38\u597d\u7684\u9ed8\u8ba4\u914d\u7f6e\uff0c \u5728\u5f88\u591a\u60c5\u51b5\u4e0b\u4f60\u4e0d\u9700\u8981\u6539\u52a8\u5373\u53ef\u76f4\u63a5\u4f7f\u7528\u3002 \u4f7f\u7528handler\uff1a from logbook import FileHandler , info file_handler = FileHandler ( 'logbook.log' , level = 'INFO' ) with file_handler : info ( 'This is logged in a file' ) TestHandler logbook\u63d0\u4f9b\u4e86TestHandler\uff0c\u53ef\u4ee5\u7528\u6765\u6d4b\u8bd5log\uff0c\u4f7f\u7528\u975e\u5e38\u65b9\u4fbf\uff0c\u53c2\u8003\u6587\u6863\uff1a https://logbook.readthedocs.org/en/latest/api/handlers.html#logbook.TestHandler MailHandler https://logbook.readthedocs.org/en/latest/api/handlers.html#logbook.MailHandler TODO ThreadedWrapperHandler https://logbook.readthedocs.org/en/latest/api/queues.html#logbook.queues.ThreadedWrapperHandler TODO FingersCrossedHandler logbook\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7279\u6b8a\u7684\"fingers crossed\" handler\uff0c\u8fd9\u4e2ahandler\u4f5c\u4e3a\u4e00\u4e2awrapper\uff0c\u662f\u7528\u6765\u5c01\u88c5\u5176\u5b83 handler\u7684\uff0c\u8fd9\u4e2ahandler\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u529f\u80fd\uff0c\u5b83\u4f1a\u5c06\u6240\u6709\u7684log\u8bb0\u5f55\u5230\u5185\u5b58\u4e2d\uff0c\u5f53\u67d0\u4e00\u4e9blog\u7684\u7ea7\u522b (debug, info, warning, error)\u8d85\u8fc7FingersCrossedHandler\u8bbe\u7f6e\u7684\u7ea7\u522b\u65f6\uff0c\u6240\u6709\u5728\u5185\u5b58\u4e2d\u7684log\u4ee5\u53ca\u540e\u9762\u7684log \u90fd\u5c06\u88ab\u8bb0\u5f55\u5230\u8fd9\u4e2ahandler\u4e2d\u3002\u5f53log\u7ea7\u522b\u6ca1\u6709\u5230\u8fbe\u65f6\uff0c\u6240\u6709\u7684log\u90fd\u4e0d\u4f1a\u88abFingersCrossedHandler\u5904\u7406\u3002 \u8fd9\u4e00handler\u5f88\u9002\u5408\u7528\u5728web application\u4e2d\uff0c\u5f53\u67d0\u4e00\u9519\u8bef\u4ea7\u751f\u65f6\u8bb0\u5f55\u76f8\u5173\u7684request\u3002 FingersCrossedHandler\u9ed8\u8ba4\u8bbe\u7f6e\u7684\u7ea7\u522b\u4e3aERROR \u4e0b\u9762\u7ed9\u51fa\u4e24\u4e2a\u793a\u4f8b\u4ee3\u7801\uff1a from logbook import info , error , FingersCrossedHandler , FileHandler file_handler = FileHandler ( 'bar.log' ) handler = FingersCrossedHandler ( file_handler ) with handler : info ( 'hello info' ) error ( 'hello error' ) \u4f1a\u5728bar.log\u6587\u4ef6\u4e2d\u8f93\u51fa\u4e24\u53e5log from logbook import info , error , FingersCrossedHandler , FileHandler file_handler = FileHandler ( 'bar.log' ) handler = FingersCrossedHandler ( file_handler ) with handler : info ( 'hello info' ) info ( 'hello info2' ) \u4e0d\u4f1a\u6709\u4efb\u4f55log\u8f93\u51fa \u4f7f\u7528Processors import os def inject_cwd ( record ): record . extra [ 'cwd' ] = os . getcwd () with Processor ( inject_cwd ): # all logging calls inside this block in this thread will now # have the current working directory information attached. ... \u6ce8\u610f \uff1a Processor\u53ea\u6709\u5f53log\u88ab\u67d0\u4e00\u4e2ahandler\u5904\u7406\u7684\u65f6\u5019\u624d\u4f1a\u6267\u884c\uff0c\u5426\u5219processor\u6c38\u8fdc\u4e0d\u4f1a\u62db\u5f85\u3002","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/05/19/logbook.html","title":"Logbook"},{"text":"","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/05/19/django-logbook.html","title":"django-logbook"},{"text":"Linux TCP Performance Tuning There are two ways to change tcp parameters. change the value of parameter files in /proc/sys/net/ e.g. increase the value of somaxconn echo 1024 > /proc/sys/net/core/somaxconn when the server restart, the parameter will restore. change the vlaue in /etc/sysctl.con, and run sudo sysctl -p to apply the changes immediately, this can change the value permanently. Parameters /proc/sys/fs/file-max: The maximum number of concurrently open files. /proc/sys/net/ipv4/tcp_max_syn_backlog: Maximum number of remembered connection requests, which are still did not receive an acknowledgment from connecting client. The default value is 1024 for systems with more than 128Mb of memory, and 128 for low memory machines. If server suffers of overload, try to increase this number. /proc/sys/net/core/somaxconn: Limit of socket listen() backlog, known in userspace as SOMAXCONN. Defaults to 128. The value should be raised substantially to support bursts of request. For example, to support a burst of 1024 requests, set somaxconn to 1024. change userlevel file-max need logout and login to work","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/05/16/linux.html","title":"Linux"},{"text":"nginx backlog Root Directory nginx \u9ed8\u8ba4\u6839\u76ee\u5f55\uff0c \u5982\u679c\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a\u4e86root\uff0c\u5219\u6839\u76ee\u5f55\u5373\u4e3aroot\u6307\u5b9a\u7684\u76ee\u5f55 \u5982\u679c\u901a\u8fc7\u7f16\u8bd1\u5b89\u88c5\u7684nginx\uff0c\u5219\u6839\u76ee\u5f55\u4e3a\u7f16\u8bd1\u65f6\u6307\u5b9a\u7684prefix\u76ee\u5f55 \u5982\u679c\u901a\u8fc7\u5305\u7ba1\u7406\u5668\u5b89\u88c5\uff0c\u5219\u6839\u76ee\u5f55\u4e0e\u53d1\u884c\u7248\u76f8\u5173\u3002\u4f8b\u5982ubuntu\u7248\u672c\u7684\u6839\u76ee\u5f55\u4e3a\uff1a /usr/share/nginx/www Custome error page nginx \u6709\u4e2a\u9ed8\u8ba4\u7684\u9519\u8bef\u663e\u793a\u9875\u9762 Ref http://wiki.nginx.org/Pitfalls","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/05/13/nginx-tips.html","title":"nginx tips"},{"text":"\u4ecb\u7ecd peclian \u662f\u4e00\u4e2apython\u7248\u672c\u7684\u8868\u6001\u9875\u9762\u751f\u6210\u5668\uff0c\u7c7b\u4f3c\u4e8ejekyll","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/05/09/pelican.html","title":"pelican"},{"text":"\u5f53\u6211\u4eec\u5b89\u88c5\u67d0\u4e9b\u8f6f\u4ef6\uff0c\u9700\u8981\u94fe\u63a5python\u7684\u52a8\u6001\u5e93\u65f6\uff0c\u5982\u679c\u7cfb\u7edf\u7684python\u7248\u672c\u662f\u9759\u6001\u5e93\u7684\uff0c\u4f1a\u63d0\u793a\u5982\u4e0b\u9519\u8bef\uff1a /usr/bin/ld: .../lib/libpython2.7.a(abstract.o): relocation R_X86_64_32 against 'a local symbol' can not be used when making a shared object; recompile with -fPIC .../lib/libpython2.7.a: could not read symbols: Bad value collect2: ld returned 1 exit status \u8fd9\u79cd\u60c5\u51b5\u9700\u8981\u5b89\u88c5\u52a8\u6001\u5e93\u7248\u672c\u3002 \u4e0b\u9762\u4ecb\u7ecd\u81ea\u5df1\u7f16\u8bd1\u5b89\u88c5\u52a8\u6001\u5e93\u7684python\u7248\u672c\u3002 \u5b89\u88c5 \u901a\u8fc7ubuntu\u8f6f\u4ef6\u5e93\u5b89\u88c5\u7684python\u7248\u672c\u5e26\u6709\u52a8\u6001\u94fe\u63a5\u5e93\uff0c\u4f4d\u7f6e\u4e3a /usr/lib/libpython<version>.so , \u5982\u679c\u7cfb\u7edf\u4e2d\u9ed8\u8ba4\u7684python\u7248\u672c\u592a\u4f4e\uff0c\u8f6f\u4ef6\u5e93\u4e2d\u53c8\u6ca1\u6709\u9ad8\u7248\u672c\u65f6\uff0c\u9700\u8981\u624b\u52a8\u7f16\u8bd1\u5b89\u88c5\u3002 \u4e0b\u9762\u4ee5python2.7.4\u4e3a\u4f8b\uff0c\u5176\u5b83\u7248\u672c\u7c7b\u4f3c $ ./configure $ make $ sudo make install \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c make \u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u7f16\u8bd1\u751f\u6210\u4e00\u4e2alibpython2.7.a\u7684\u9759\u6001\u94fe\u63a5\u5e93\u3002 \u5982\u679c\u8981\u751f\u6210\u52a8\u6001\u94fe\u63a5\u5e93\uff0c\u6211\u4eec\u9700\u8981\u5728 configure \u547d\u4ee4\u540e\u52a0\u9009\u9879 --enable-shared Building a shared libpython Starting with Python 2.3, the majority of the interpreter can be built into a shared library, which can then be used by the interpreter executable, and by applications embedding Python. To enable this feature, configure with --enable-shared. $ ./configure --enable-shared $ make $ sudo make install \u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u4f1a\u751f\u6210\u52a8\u6001\u94fe\u63a5\u5e93\uff0c\u5e76\u5b89\u88c5\u5230\u7cfb\u7edf\u5e93\u76ee\u5f55\u4e0b,\u5730\u5740\uff1a /usr/local/lib/libpython2.7.so \u95ee\u9898 \u5728make\u7684\u8fc7\u7a0b\u53ef\u80fd\u4f1a\u5931\u8d25\uff0c\u63d0\u793a\u5982\u4e0b\u9519\u8bef\uff1a /usr/bin/ld: .../lib/libpython2.7.a(abstract.o): relocation R_X86_64_32 against 'a local symbol' can not be used when making a shared object; recompile with -fPIC .../lib/libpython2.7.a: could not read symbols: Bad value collect2: ld returned 1 exit status \u539f\u56e0\u662f\u7cfb\u7edf\u94fe\u63a5\u5e93\u76ee\u524d\u4e0b\u5b58\u5728\u4e00\u4e2a\u8868\u6001\u94fe\u63a5\u5e93 libpython2.7.a \uff0c\u53ef\u80fd\u662f\u4e4b\u524d\u5b89\u88c5\u7684\uff0c \u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u8981\u628a\u7cfb\u7edf\u539f\u6709\u7684Python\u5e93\u7684\u8def\u5f84\u4ece\u7f16\u8bd1\u53c2\u6570\u4e2d\u9664\u53bb\uff0c\u8ba9\u94fe\u63a5\u5668\u5148\u641c\u7d22\u5f53\u524d\u76ee\u524d\uff0c\u5f53\u524d\u8def\u5f84\u4e3a\".\"\uff0c\u901a\u8fc7\u8bbe\u7f6eLDFLAGS\uff0c\u5982\u4e0b\uff1a $ ./configure --enable-shared LDFLAGS = -L. \u540c\u65f6\u5efa\u8bae\uff1a\u5982\u679c\u4f60\u4e4b\u524d\u8fd0\u884c\u8fc7 make \uff0c\u90a3\u4e48\u5728\u4e0b\u4e00\u6b21\u8fd0\u884c make \u4e4b\u524d\uff0c\u8fd0\u884c make clean \u5b89\u88c5\u5b8c\u6210\u4e4b\u540e\u8fd0\u884c python \uff0c\u53ef\u80fd\u4f1a\u63d0\u793a\u5982\u4e0b\u9519\u8bef\uff1a ImportError: libpython2.7.so.1.0: cannot open shared object file: No such file or directory \u8fd9\u662f\u56e0\u4e3a\u65b0\u5b89\u88c5\u7684\u52a8\u6001\u94fe\u63a5\u5e93 libpython2.7.so \u5e76\u4e0d\u5728\u7cfb\u7edf\u7684cache\u4e2d\u3002 Linux\u4e0a\u9700\u8981\u94fe\u63a5\u52a8\u6001\u5e93\u65f6\uff0c\u7cfb\u7edf\u4f1a\u4ececache\u6587\u4ef6\uff08/etc/ld.so.cache\uff09\u4e2d\u627e\u5230\u6b64\u94fe\u63a5\u5e93\u3002 \u6b64\u65f6\u9700\u8981\u8fd0\u884c sudo ldconfig \u66f4\u65b0cache\u3002 \u53c2\u8003 http://www.cbug.org/2011/11/21/multiple-python-versions-cause-shared-library-mess.html http://blog.csdn.net/huzhenwei/article/details/7339548 http://linux.101hacks.com/unix/ldconfig/ if (!document.getElementById('mathjaxscript_pelican')) { var s = document.createElement('script'); s.id = 'mathjaxscript_pelican'; s.type = 'text/javascript'; s.src = 'https:' == document.location.protocol ? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js' : 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; s[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(s); }","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/05/05/python-build-dynamic-link-library.html","title":"python build Dynamic Link Library"},{"text":"decorator class method Django Django test ref: http://mikegrouchy.com/blog/great-django-test-talks.html","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/05/04/python.html","title":"Python"},{"text":"home page: https://github.com/utahta/pythonbrew install packages over pythonbrew pythonbrew can install multiple python versions on the same machine, if you want to install packages over a specified python version, a recommand way is to install pip first. install pip home page: http://www.pip-installer.org/en/latest/ pip is just a python pacakge first use pythonbrew switch to the desired python version, then $ curl - O https : //raw.github.com/pypa/pip/master/contrib/get-pip.py $ [ sudo ] python get - pip . py after that you can use pip to install whatever pacakges over the python version. If you want to install package on a different python version, re-do \"install pip\" section. if (!document.getElementById('mathjaxscript_pelican')) { var s = document.createElement('script'); s.id = 'mathjaxscript_pelican'; s.type = 'text/javascript'; s.src = 'https:' == document.location.protocol ? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js' : 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; s[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(s); }","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/05/04/pythonbrew.html","title":"Pythonbrew"},{"text":"thread cache size http://www.dbasquare.com/kb/mysql-and-thread-cache-size/ query_cache_type\u53ef\u4ee5\u8bbe\u7f6e\u4e3a0(OFF)\uff0c1(ON)\u6216\u80052(DEMOND)\uff0c\u5206\u522b\u8868\u793a\u5b8c\u5168\u4e0d\u4f7f\u7528query cache\uff0c\u9664\u663e\u5f0f\u8981\u6c42\u4e0d\u4f7f\u7528query cache\uff08\u4f7f\u7528sql_no_cache\uff09\u4e4b\u5916\u7684\u6240\u6709\u7684select\u90fd\u4f7f\u7528query cache\uff0c\u53ea\u6709\u663e\u793a\u8981\u6c42\u624d\u4f7f\u7528query cache\uff08\u4f7f\u7528sql_cache) show global status like ''; show global variables like ''; innodb_file_per_table mysql io \u5ef6\u65f6\u8ba1\u7b97 mysql backup \u76f8\u8f83\u524d\u51e0\u79cd\u65b9\u6cd5\uff0c\u5907\u4efd\u6570\u636e\u6587\u4ef6\u6700\u4e3a\u76f4\u63a5\u3001\u5feb\u901f\u3001\u65b9\u4fbf\uff0c\u7f3a\u70b9\u662f\u57fa\u672c\u4e0a\u4e0d\u80fd\u5b9e\u73b0\u589e\u91cf\u5907\u4efd\u3002\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\uff0c\u9700\u8981\u5728\u9760\u80cc\u6587\u4ef6\u524d\uff0c\u6267\u884c\u4ee5\u4e0b SQL \u8bed\u53e5\uff1a FLUSH TABLES WITH READ LOCK; \u4e5f\u5c31\u662f\u628a\u5185\u5b58\u4e2d\u7684\u6570\u636e\u90fd\u5237\u65b0\u5230\u78c1\u76d8\u4e2d\uff0c\u540c\u65f6\u9501\u5b9a\u6570\u636e\u8868\uff0c\u4ee5\u4fdd\u8bc1\u62f7\u8d1d\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u6709\u65b0\u7684\u6570\u636e\u5199\u5165\u3002\u8fd9\u79cd\u65b9\u6cd5\u5907\u4efd\u51fa\u6765\u7684\u6570\u636e\u6062\u590d\u4e5f\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u62f7\u8d1d\u56de\u539f\u6765\u7684\u6570\u636e\u5e93\u76ee\u5f55\u4e0b\u5373\u53ef\u3002 \u6ce8\u610f\uff0c\u5bf9\u4e8e Innodb \u7c7b\u578b\u8868\u6765\u8bf4\uff0c\u8fd8\u9700\u8981\u5907\u4efd\u5176\u65e5\u5fd7\u6587\u4ef6\uff0c\u5373 ib_logfile* \u6587\u4ef6\u3002\u56e0\u4e3a\u5f53 Innodb \u8868\u635f\u574f\u65f6\uff0c\u5c31\u53ef\u4ee5\u4f9d\u9760\u8fd9\u4e9b\u65e5\u5fd7\u6587\u4ef6\u6765\u6062\u590d\u3002 Innodb \u8868\u5219\u53ef\u4ee5\u901a\u8fc7\u6267\u884c\u4ee5\u4e0b\u8bed\u53e5\u6765\u6574\u7406\u788e\u7247\uff0c\u63d0\u9ad8\u7d22\u5f15\u901f\u5ea6\uff1a ALTER TABLE tbl_name ENGINE = Innodb; \u8fd9\u5176\u5b9e\u662f\u4e00\u4e2a NULL \u64cd\u4f5c\uff0c\u8868\u9762\u4e0a\u770b\u4ec0\u4e48\u4e5f\u4e0d\u505a\uff0c\u5b9e\u9645\u4e0a\u91cd\u65b0\u6574\u7406\u788e\u7247\u4e86\u3002 \u4e3a\u4e86\u4e0d\u5f71\u54cd\u7ebf\u4e0a\u4e1a\u52a1\uff0c\u5b9e\u73b0\u5728\u7ebf\u5907\u4efd\uff0c\u5e76\u4e14\u80fd\u589e\u91cf\u5907\u4efd\uff0c\u6700\u597d\u7684\u529e\u6cd5\u5c31\u662f\u91c7\u7528\u4e3b\u4ece\u590d\u5236\u673a\u5236(replication)\uff0c\u5728 slave \u673a\u5668\u4e0a\u505a\u5907\u4efd\u3002 mysql replication switch master and slave one slave and one master Master: set read lock FLUSH TABLES WITH READ LOCK; Slave: show processlist; when you see 'Has read all relay log', it means the slave is updated with master. stop slave; reset master; chane the code to operate on slave; Master: UNLOCK TABLES; make the old master to be a slave; change master to MASTER_HOST = '10.18.10.21', MASTER_USER = 'sns', MASTER_PASSWORD = '123'; [mysqld] log-bin=mysql-bin server-id=1 After making the changes, restart the server. Note If you omit server-id (or set it explicitly to its default value of 0), a master refuses connections from all slaves. Note For the greatest possible durability and consistency in a replication setup using InnoDB with transactions, you should use innodb_flush_log_at_trx_commit=1 and sync_binlog=1 in the master my.cnf file. Note Ensure that the skip-networking option is not enabled on your replication master. If networking has been disabled, your slave will not able to communicate with the master and replication will fail. 2. After connecting to the server as root, you can add new accounts. The following statements use GRANT to set up four new accounts: mysql> CREATE USER 'monty'@'localhost' IDENTIFIED BY 'some_pass'; mysql> GRANT ALL PRIVILEGES ON . TO 'monty'@'localhost' -> WITH GRANT OPTION; mysql> CREATE USER 'monty'@'%' IDENTIFIED BY 'some_pass'; mysql> GRANT ALL PRIVILEGES ON . TO 'monty'@'%' -> WITH GRANT OPTION; mysql> CREATE USER 'admin'@'localhost'; mysql> GRANT RELOAD,PROCESS ON . TO 'admin'@'localhost'; mysql> CREATE USER 'dummy'@'localhost'; The accounts created by these statements have the following properties: Two of the accounts have a user name of monty and a password of some_pass. Both accounts are superuser accounts with full privileges to do anything. The 'monty'@'localhost' account can be used only when connecting from the local host. The 'monty'@'%' account uses the '%' wildcard for the host part, so it can be used to connect from any host. It is necessary to have both accounts for monty to be able to connect from anywhere as monty. Without the localhost account, the anonymous-user account for localhost that is created by mysql_install_db would take precedence when monty connects from the local host. As a result, monty would be treated as an anonymous user. The reason for this is that the anonymous-user account has a more specific Host column value than the 'monty'@'%' account and thus comes earlier in the user table sort order. (user table sorting is discussed in Section 6.2.4, \"Access Control, Stage 1: Connection Verification\".) The 'admin'@'localhost' account has no password. This account can be used only by admin to connect from the local host. It is granted the RELOAD and PROCESS administrative privileges. These privileges enable the admin user to execute the mysqladmin reload, mysqladmin refresh, and mysqladmin flush-xxx commands, as well as mysqladmin processlist . No privileges are granted for accessing any databases. You could add such privileges later by issuing other GRANT statements. The 'dummy'@'localhost' account has no password. This account can be used only to connect from the local host. No privileges are granted. It is assumed that you will grant specific privileges to the account later. The statements that create accounts with no password will fail if the NO_AUTO_CREATE_USER SQL mode is enabled. To deal with this, use an IDENTIFIED BY clause that specifies a nonempty password. To check the privileges for an account, use SHOW GRANTS: mysql> SHOW GRANTS FOR 'admin'@'localhost'; +-----------------------------------------------------+ | Grants for admin@localhost | +-----------------------------------------------------+ | GRANT RELOAD, PROCESS ON . TO 'admin'@'localhost' | +-----------------------------------------------------+ 16.1.1.5. Creating a Data Snapshot Using mysqldump : http://dev.mysql.com/doc/refman/5.1/en/replication-howto-mysqldump.html Obtaining the Replication Master Binary Log Coordinates : http://dev.mysql.com/doc/refman/5.1/en/replication-howto-masterstatus.html If a slave uses the default host-based relay log file names, changing a slave's host name after replication has been set up can cause replication to fail with the errors Failed to open the relay log and Could not find target log during relay log initialization. This is a known issue (see Bug #2122). If you anticipate that a slave's host name might change in the future (for example, if networking is set up on the slave such that its host name can be modified using DHCP), you can avoid this issue entirely by using the --relay-log and --relay-log-index options to specify relay log file names explicitly when you initially set up the slave. This will make the names independent of server host name changes.","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/05/04/mysql-xing-neng-diao-you.html","title":"Mysql \u6027\u80fd\u8c03\u4f18"},{"text":"netstat -tanp | grep -o '(10.18.10.20\\|211.151.139.230\\|127.0.0.1):[0-9]*' | sort -nr | uniq -c | sort -nr -k 1 | wc -l","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/04/11/time_wait-in-netstat.html","title":"TIME_WAIT in netstat"},{"text":"Mac sshfs Mac \u6302\u8f7d\u8fdc\u7a0b\u76ee\u5f55 http://osxfuse.github.com/ install OXSFUSE and SSHFS TF-IDF http://www.ruanyifeng.com/blog/2013/03/tf-idf.html http://www.ruanyifeng.com/blog/2013/03/cosine_similarity.html http://www.ruanyifeng.com/blog/2013/03/automatic_summarization.html","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/03/31/misc.html","title":"misc"},{"text":"alias \u5bf9\u4e8e\u4e00\u4e9b\u6bd4\u8f83\u5e38\u7528\u7684\u957f\u547d\u4ee4\u53ef\u4ee5\u7528alias\u505a\u4e00\u4e2a\u522b\u540d\uff0c\u4ee5\u540e\u53ef\u4ee5\u76f4\u63a5\u7528\u522b\u540d\u64cd\u4f5c\u3002 e.g. \u5728.bashrc\u4e2d\u52a0\u5165 alias servername = 'ssh sns@hostname' \u6267\u884c\uff1a $ servername \u5373\u53ef\u767b\u9646\u5230hostname\u673a\u5668\u3002 rsync \u5927\u5bb6\u5e38\u7528rsync\u540c\u6b65\u6570\u636e\uff0c\u6709\u4e9b\u6570\u636e\u662f\u4e0d\u9700\u8981\u540c\u6b65\u7684\uff0c\u53ef\u4ee5\u7528 --exclude \u9009\u9879\u3002 e.g. rsync -avz --exclude \".*\" --exclude \"dbconfig.py\" src user@hostname:/dest --exclude \".*\" \u4e0d\u4f1a\u540c\u6b65\u4ee5 \".\" \u5f00\u5934\u7684\u6587\u4ef6\u6216\u6587\u4ef6\u5939\uff0c\u4e0d\u4f1a\u540c\u6b65.git\u76ee\u5f55\uff08.git\u76ee\u5f55\u662f\u6bd4\u8f83\u5927\u7684\uff0c\u4e0d\u5efa\u8bae\u540c\u6b65\uff09\u3002 mail \u6240\u6709crontab\u4efb\u52a1\u7684\u8fd0\u884c\u7ed3\u679c\u90fd\u4f1a\u8f93\u51fa\u5230mail\u4e2d\uff0c\u53ef\u4ee5\u968f\u65f6\u67e5\u770b\u6bcf\u4e2a\u4efb\u52a1\u7684\u8fd0\u884c\u60c5\u51b5\u3002 tmux \u5de5\u4f5c\u4e2d\u7ecf\u5e38ssh\u5230\u8fdc\u7a0b\u670d\u52a1\u5668\uff0c\u6709\u65f6\u9700\u8981\u5728\u8fdc\u7a0b\u670d\u52a1\u5668\u4e2d\u5f00\u542f\u591a\u4e2a\u7ec8\u7aef\uff0c \u4e00\u79cd\u529e\u6cd5\u662f\u5728\u672c\u5730\u5f00\u542f\u591a\u4e2a\u7ec8\u7aef\uff0c\u5206\u522b\u8fdc\u7a0b\u5230\u670d\u52a1\u5668\u3002 \u8fd8\u6709\u4e00\u79cd\u65b9\u5f0f\u662f\u5229\u7528 tmux \u3002 install: $sudo apt-get install tmux basic usage: < C - b p > go to previous window < C - b n > go to next window < C - b c > create a new window < C - b 1 > go to No .1 window < C - b d > detach this tmux session tmux \u7684\u529f\u80fd\u975e\u5e38\u5f3a\uff0c\u4f46\u547d\u4ee4\u8f83\u591a\uff0c\u5b66\u4e60\u6210\u672c\u8f83\u9ad8\uff0c\u53ef\u4ee5\u5148\u4f7f\u7528\u4e0a\u9762\u51e0\u4e2a\u547d\u4ee4\u3002 \u63a8\u8350\u4ecb\u7ecd\u89c6\u9891: http://happycasts.net/episodes/41?autoplay=true ssh \u4eca\u5929\u641e\u6e05\u695a\u4e86ssh\u7684\u6807\u51c6\u8f93\u5165\u8f93\u51fa\uff0c\u4e0b\u9762\u662fssh\u547d\u4ee4\u7684\u4f7f\u7528\u65b9\u5f0f ssh [ - 1246 AaCfgKkMNnqsTtVvXxYy ] [ - b bind_address ] [ - c cipher_spec ] [ - D [ bind_address : ] port ] [ - e escape_char ] [ - F configfile ] [ - I pkcs11 ] [ - i identity_file ] [ - L [ bind_address : ] port : host : hostport ] [ - l login_name ] [ - m mac_spec ] [ - O ctl_cmd ] [ - o option ] [ - p port ] [ - R [ bind_address : ] port : host : hostport ] [ - S ctl_path ] [ - W host : port ] [ - w local_tun [ : remote_tun ]] [ user @ ] hostname [ command ] \u6700\u540e\u7684 command \u662f\u5728 hostname \u673a\u5668\u4e0a\u6267\u884c command \u547d\u4ee4\uff0c\u90a3\u4e48 command \u547d\u4ee4\u7684\u6807\u51c6\u8f93\u5165\u8f93\u51fa\u662f\u8fdc\u7a0b\u673a\u5668 hostname \u4e0a\uff0c\u8fd8\u662f\u5728\u672c\u5730\u673a\u5668\u4e0a\uff1f \u5f88\u591a\u521d\u5b66\u8005\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u662f\u8fdc\u7a0b\u673a\u5668\u7684\u6807\u51c6\u8f93\u5165\u8f93\u51fa\uff08\u672c\u4eba\u4ee5\u524d\u4e5f\u662f\u8fd9\u4e48\u8ba4\u4e3a\u7684\uff09\uff0c\u5176\u5b9e\u662f\u5728\u672c\u5730\u673a\u5668\u4e0a\u3002 \u4e0b\u9762\u6211\u4eec\u505a\u4e2a\u8bd5\u9a8c\uff0c\u53ef\u4ee5\u5728\u672c\u5730\u6267\u884c\u8fdc\u7a0b\u673a\u5668\u7684\u7a0b\u5e8f\u5e76\u83b7\u5f97\u8f93\u51fa\u7ed3\u679c\u3002 $echo \"local host\" | ssh user@hostname \"(echo server; cat; echo server)\" server local host server \u6211\u4eec\u7528\u5c06\"local host\"\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\uff0c\u5728hostname\u673a\u5668\u4e0a cat \u4ece\u6807\u51c6\u8f93\u5165\u83b7\u53d6\"local host\"\u5e76\u518d\u6b21\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa(\u672c\u5730\u673a\u5668\u7684\u6807\u51c6\u8f93\u51fa)\u3002 \u867d\u7136 command \u4e2d\u7684\u6807\u51c6\u8f93\u5165\u8f93\u51fa\u662f\u5728\u672c\u5730\u673a\u5668\uff0c\u4f46 command \u4e2d\u7684\u547d\u4ee4\u548c\u76ee\u5f55\u7b49\u90fd\u662f\u76f8\u5bf9\u4e8ehostname\u7684\uff0c\u4e0e\u672c\u5730\u673a\u5668\u65e0\u6cd5\u3002 fuser if (!document.getElementById('mathjaxscript_pelican')) { var s = document.createElement('script'); s.id = 'mathjaxscript_pelican'; s.type = 'text/javascript'; s.src = 'https:' == document.location.protocol ? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js' : 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; s[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(s); }","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/03/27/bash.html","title":"Bash"},{"text":"caution : need gevent(>= 1.0), and uwsgi(>= 1.4) https://github.com/SiteSupport/gevent/downloads uwsgi install https://uwsgi-docs.readthedocs.org/en/latest/Install.html https://uwsgi-docs.readthedocs.org/en/latest/Gevent.html","tags":"misc","loc":"http://zhangliyong.github.io/posts/2013/03/27/config-gevent-on-uwsgi.html","title":"config gevent on uwsgi"}]}